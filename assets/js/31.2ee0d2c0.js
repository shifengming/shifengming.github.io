(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{201:function(n,t,i){"use strict";i.r(t);var l=i(0),e=Object(l.a)({},(function(){this._self._c;return this._m(0)}),[function(){var n=this._self._c;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"垂直水平居中的几种方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垂直水平居中的几种方法"}},[this._v("#")]),this._v(" 垂直水平居中的几种方法")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('<div class="parent">\n    <div class="child">\n    </div>\n</div>\n\n<style>\n    .parent{\n        width: 550px;\n        height: 550px;\n        border: 1px  solid #FF7F24;\n        /* 方法一：定位 */\n        /* position: relative; */\n\n        /* 方法二：margin: auto */\n        /* position: relative; */\n\n        /* 方法三：利用display:table-cell */\n        /* display:table-cell 加上 vertical-align:middle和text-align:center 使高度不同的元素都水平垂直居中，其中display：inline-block使这两个div在同一行显示 */\n        /* display: table-cell;\n        vertical-align: middle;\n        text-align: center; */\n\n        /* 方法四：利用display:flex */\n        /* display: flex;\n        justify-content: center;\n        align-items: center; */\n\n        /* 方法五：计算父盒子与子盒子的空间距离(这跟方法一是一个道理) */\n\n        /* 方法六：利用transfrom */\n        /* position: relative */\n\n        /* 方法七：利用calc计算 */\n        /* position: relative; */\n\n    }\n    .child{\n        width: 150px;\n        height: 150px;\n        border: 1px solid #FF3030;\n        /* 方法一：定位 */\n        /* position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-top: -75px;\n        margin-left: -75px;    */\n\n        /* 方法二：margin: auto */\n        /* 网上说top: 0，left: 0，right: 0，bottom: 0就像四个方向有相同的力在拉这个盒子，然后margin:auto相当于平方剩余空间居中 */\n        /* position: absolute;\n        margin: auto;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0; */\n\n        /* 方法三：利用display:table-cell */\n        /* display: inline-block */\n\n        /* 方法五：计算父盒子与子盒子的空间距离(这跟方法一是一个道理) */\n        /* (parent550-child150)÷2=200 */\n        /* margin-top: 200px;\n        margin-left: 200px; */\n\n        /* 方法六：利用transfrom */\n        /* position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%,-50%); */\n\n        /* 方法七：利用calc计算 */\n        /* top和left都是(父元素高-子元素高)÷2 */\n        /* position: absolute;\n        top:calc(200px);\n        left: calc(200px); */\n    }\n</style>\n')])])])])}],!1,null,null,null);t.default=e.exports}}]);