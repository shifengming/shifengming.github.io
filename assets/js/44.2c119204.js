(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{205:function(t,a,n){"use strict";n.r(a);var e=n(0),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"组件常用选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件常用选项"}},[t._v("#")]),t._v(" 组件常用选项")]),t._v(" "),n("h2",{attrs:{id:"data"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" data")]),t._v(" "),n("p",[t._v("vue的所有数据都是放在data里面的，data里面也是一个对象，对象里面的a可以对页面进行双向绑定，这两个是关联的")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n    <div id="app">\n        {{a}}\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                a: 1,\n                b: []\n            }   \n        }\n    }\n<\/script>\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("1\n")])])]),n("h2",{attrs:{id:"method"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#method"}},[t._v("#")]),t._v(" method")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n    <div id="app">\n        {{a}}\n        <button @click="doSomething"></button>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                a: 1,\n                b: []\n            }\n        },\n        methods:{\n            doSomething(){\n                console.log(this.a)\n            }\n        } \n    }\n<\/script>\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("1\n//然后点击页面按钮，右边控制台也打印1\n")])])]),n("h2",{attrs:{id:"watch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[t._v("#")]),t._v(" watch")]),t._v(" "),n("p",[t._v("watch字母上理解就是一个监听，这里面我们监听了a，这个a就是数据里面的a，比如doSomething里面进行了+1的变化，watch里面对应的加监听方法就会自动的去执行，这里打印了新的值和旧的值，如果+1后，val就是2，oldVal就是1")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n    <div id="app">\n        {{a}}\n        <button @click="doSomething"></button>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                a: 1,\n                b: []\n            }\n        },\n        methods:{\n            doSomething(){\n                this.a++\n            }\n        },\n        watch:{\n            \'a\':function(val,oldVal){\n                console.log(val,oldVal)\n            }\n        } \n    }\n<\/script>\n')])])]),n("h2",{attrs:{id:"computed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[t._v("#")]),t._v(" computed")]),t._v(" "),n("p",[t._v("在开发当中经常遇到数值计算，比如说有两个变量值，但是输出的是两者的计算值和")]),t._v(" "),n("p",[t._v("如果循环里面需要加判断，就要用到计算属性")]),t._v(" "),n("p",[t._v("页面使用"+t._s(t.fullname))]),t._v(" "),n("p",[t._v("当a和b没变的情况下，fullname会使用缓存的结果，只有a和b任何一方发生变化时，才会去重新计算，这种只有依赖方发生改变才会去重新计算的模式，会大大提高效率")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n    <div id="app">\n        {{a}}\n        <button @click="doSomething">点我</button>\n        <p>good morning: "{{fullname}}"</p>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                a: 1,\n                b: 2\n            }\n        },\n        methods:{\n            doSomething(){\n                this.a++\n            }\n        },\n        watch:{\n            \'a\':function(val,oldVal){\n                console.log(val,oldVal)\n            }\n        },\n        computed: {\n            fullname(){\n                return this.a + " " + this.b\n            }\n        } \n    }\n<\/script>\n')])])]),n("p",[n("img",{attrs:{src:"http://r.photo.store.qq.com/psc?/V121VjTP2yfy1N/uMeul31pGB4ZvQm8Ou4xcb7kO2Ca06BniC36dUeOf1eG9xYOK5d7MJ32SNcHcTmzyNalT7a3Sh3GXiyi*.Z.j1d.QP.Yprd6zPmDP1EJLKM!/r",alt:""}})]),t._v(" "),n("h2",{attrs:{id:"props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" props")]),t._v(" "),n("p",[t._v("用vue写独立组件的时候，经常会涉及到一个问题：如果父组件传值，就用传过来的值。否则，就用默认值。这里提供了一个props")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  export default {\n    name: 'slider1',\n    props: {\n      loop: {\n        type: Boolean,\n        default: true\n      },\n      autoplay: {\n        type: Boolean,\n        default: true\n      },\n      interval: {\n        type: Number,\n        default: 4000\n      }\n    },\n")])])]),n("h2",{attrs:{id:"filter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" filter")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n    <div id="app">\n        <ul>\n            \x3c!-- 添加两个过滤器，注意不要冲突，注意先后顺序 --\x3e\n            <li v-for="item in list" :key="item.id">{{item.id | filterAdd1 | filterAdd2 | filterAdd3}}</li>\n        </ul>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                list:[\n                    {"id":0,"title":"11111","cont":"111111"},\n                    {"id":1,"title":"22222","cont":"111111"},\n                    {"id":2,"title":"33333","cont":"111111"},\n                    {"id":3,"title":"44444","cont":"111111"},\n                ]\n            }\n        },\n        filters:{\n            filterAdd1(item) {\n                return item+10;\n            },\n            filterAdd2(item) {\n                return \'有\'+item;\n            },\n            filterAdd3(item) {\n                return \'好的\'+item;\n            }\n        },\n    }\n<\/script>\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("好的有10\n好的有11\n好的有12\n好的有13\n")])])]),n("p",[t._v("所以差不多的意思就是先把"),n("code",[t._v("item.id")]),t._v("进行"),n("code",[t._v("filterAdd1")]),t._v("过滤返回出 "),n("code",[t._v("item+ 10")]),t._v("的结果，然后再进行"),n("code",[t._v("filterAdd2")]),t._v("过滤返回出'有'+"),n("code",[t._v("item")]),t._v(";的结果，然后再进行"),n("code",[t._v("filterAdd3")]),t._v("过滤返回出'好的'+"),n("code",[t._v("item")]),t._v("的结果，执行完得出最后的值")])])}),[],!1,null,null,null);a.default=s.exports}}]);