(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{206:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){this._self._c;return this._m(0)}),[function(){var t=this,s=t._self._c;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"js常见比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js常见比较"}},[t._v("#")]),t._v(" JS常见比较")]),t._v(" "),s("h2",{attrs:{id:"_1-isnan-和-number-isnan-函数的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-isnan-和-number-isnan-函数的区别？"}},[t._v("#")]),t._v(" 1. isNaN 和 Number.isNaN 函数的区别？")]),t._v(" "),s("ul",[s("li",[t._v("isNaN：判断传入的参数是否能被转换成数字，如果可以转换为数字，返回 false；如果不能转换为数字，返回 true"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AB'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Number.isNaN：判断传入的值是否全等于 NaN，如果是 NaN，返回 true，其他值都返回 false（Es6 新加的严格判断是否===NaN）"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AB'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("由于 NaN 是唯一一个不等于自身的值，不像其他的值，可以用相等操作符来判断是否等于自身，NaN == NaN 和 NaN === NaN 都会返回 false，所以 isNaN()就诞生了")]),t._v(" "),s("ul",[s("li",[t._v("NaN 有两个特点：\n"),s("ol",[s("li",[t._v("任何与 NaN 相关的操作都会返回 NaN")]),t._v(" "),s("li",[t._v("NaN 与任何的值都不相等，而且它与本身也不相等")])])]),t._v(" "),s("li",[t._v("NaN 作用：可以接收一个参数，原理是先尝试将参数转换为数值型，调用的是 Number()方法来确定该参数是否“不是数值”。不是数值就会返回 true,是数值就会返回 false")]),t._v(" "),s("li",[t._v("Number()方法的原理也有点复杂，具体分两种情况:\n"),s("ol",[s("li",[t._v("参数为原始数据类型\n原始数据类型有：数值、字符串、布尔值、undefined、null,先对参数调用 valueOf 方法，再用 Number()方法进行判断.")]),t._v(" "),s("li",[t._v("参数为对象\n先对参数调用 valueOf 方法，再对参数调用 toString()方法，最后用 Number()方法进行判断。")])])]),t._v(" "),s("li",[t._v("isNaN: 当我们向 isNaN 传递一个参数，它的本意是通过 Number()方法尝试将这参数转换成 Number 类型，如果成功返回 false，如果失败返回 true。所以"),s("code",[t._v("isNaN只是判断传入的参数是否能转换成数字，并不是严格的判断是否等于NaN")]),t._v("。")]),t._v(" "),s("li",[t._v("Number.isNaN: 判断传入的参数是否严格的等于 NaN(也就是 ===)")]),t._v(" "),s("li",[t._v("两者的区别: Number.isNaN 与 isNaN 最的区别是，Number.isNaN"),s("code",[t._v("不存在类型转换的行为")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_2-undefined-与-undeclared-的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-undefined-与-undeclared-的区别？"}},[t._v("#")]),t._v(" 2. undefined 与 undeclared 的区别？")]),t._v(" "),s("ul",[s("li",[t._v("undefined: 在作用域声明后没有赋值")]),t._v(" "),s("li",[t._v("undeclared: 在作用域中没有申明就访问")])]),t._v(" "),s("h2",{attrs:{id:"_3-为什么-8-tostring-会报错？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-为什么-8-tostring-会报错？"}},[t._v("#")]),t._v(" 3. 为什么 8.toString()会报错？")]),t._v(" "),s("p",[t._v("在 8.toString()这条代码里，这个.有两个解释：1、小数点；2、方法调用，所以这里产生了一个歧义。")]),t._v(" "),s("p",[t._v("在这里因为这个点紧跟于一个数字之后，所以按照规范，解释器就把它判断为一个小数点，这行代码就变成了一个浮点数，但是问题就产生了，toString()不是一个数字，所以编译之后就报错了。")]),t._v(" "),s("ul",[s("li",[t._v("实现方式：\n"),s("ol",[s("li",[s("code",[t._v("8..toString()")]),t._v(" 这里第一个点是表示小数点，相当于（8.0）.toString()")]),t._v(" "),s("li",[s("code",[t._v("8 .toString()")]),t._v(" 这里用一个空格来告诉解释器，这个.是方法调用")]),t._v(" "),s("li",[s("code",[t._v("(8).toString()")]),t._v(" ()的优先级高，优先解释")])])])]),t._v(" "),s("h2",{attrs:{id:"_4-var、let、const-的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-var、let、const-的区别？"}},[t._v("#")]),t._v(" 4. var、let、const 的区别？")]),t._v(" "),s("ol",[s("li",[t._v("var 全局作用域，可以重复定义变量，会存在变量提升")]),t._v(" "),s("li",[t._v("let 块级作用域，必须先申明再使用，不能重复定义变量，在当前代码块内有效")]),t._v(" "),s("li",[t._v("const 块级作用域，用来定义常量，使用时必须初始化(即必须赋值)不能修改("),s("strong",[t._v("注意")]),t._v("：虽然 const 变量不能修改指针，但是可以修改值，比如我们定义一个对象，我们就可以修改对象里的属性值，但是不可以重写整个对象。)，在当前代码块内有效")]),t._v(" "),s("li",[t._v("var let const 最大的区别？var 在全局作用域声明的变量会挂载在 window 对象上("),s("code",[t._v("会覆盖到window对象上的某个属性")]),t._v(")，let,const 不会。")])]),t._v(" "),s("p",[s("code",[t._v("暂时性死区")]),t._v("：TDZ，在申明前访问会报错，此时变量属于暂时性死区")]),t._v(" "),s("p",[s("strong",[t._v("扩展")]),t._v("：\nes5 时候只有 var 定义变量，只有全局作用域和函数作用域。es6 新增 let 和 const，存在块级作用域")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在全局作用域中或还是在局部作用域中，使用 var 关键字声明的变量，都会被提升到该作用域的最顶部，这就是我们常说的变量提升。（因为 javaScript 引擎，在代码预编译时，javaScript 引擎会自动将所有代码里面的 var 关键字声明的语句都会提升到当前作用域的顶端）")])]),t._v(" "),s("li",[s("p",[t._v("什么是块级声明呢？")]),t._v(" "),s("ol",[s("li",[t._v("只在当前函数下声明的变量有效")]),t._v(" "),s("li",[t._v("在代码块和{ }括号之内有效")])])])]),t._v(" "),s("h2",{attrs:{id:"_5-null-和-undefined-的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-null-和-undefined-的区别？"}},[t._v("#")]),t._v(" 5. null 和 undefined 的区别？")]),t._v(" "),s("ul",[s("li",[t._v("相同点：\n"),s("code",[t._v("undefined")]),t._v(" 和 "),s("code",[t._v("null")]),t._v(" 都是基本数据类型，这两个基本数据类型分别都只有一个值，就是 "),s("code",[t._v("undefined")]),t._v(" 和 "),s("code",[t._v("null")])]),t._v(" "),s("li",[t._v("不同点：\n"),s("ol",[s("li",[s("code",[t._v("null")]),t._v(" 转换成数字是 "),s("code",[t._v("0")]),t._v(", "),s("code",[t._v("undefined")]),t._v(" 转换数字是 "),s("code",[t._v("NaN")])]),t._v(" "),s("li",[s("code",[t._v("undefined")]),t._v(" 代表的含义是未定义， "),s("code",[t._v("null")]),t._v(" 代表的含义是空对象")]),t._v(" "),s("li",[s("code",[t._v("typeof null")]),t._v(" 返回 "),s("code",[t._v("’object’")]),t._v("，"),s("code",[t._v("typeof undefined")]),t._v(" 返回 "),s("code",[t._v("’undefined’")])])])])]),t._v(" "),s("p",[s("strong",[t._v("扩展")]),t._v("：为什么"),s("code",[t._v("typeof null")]),t._v(" 为 "),s("code",[t._v("object")]),t._v("？")]),t._v(" "),s("p",[t._v("这只是 JS 存在的一个悠久 Bug。在 JS 的最初版本中使用的是 32 位系统，为了性能考虑使用低位存储变量的类型信息，000 开头代表是对象，然而 null 表示为全零，所以将它错误的判断为 object 。虽然现在的内部类型判断代码已经改变了，但是对于这个 Bug 却是一直流传下来。")])])}],!1,null,null,null);s.default=e.exports}}]);