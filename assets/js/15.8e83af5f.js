(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{208:function(t,n,e){"use strict";e.r(n);var s=e(0),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue音乐项目总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue音乐项目总结"}},[t._v("#")]),t._v(" vue音乐项目总结")]),t._v(" "),e("h2",{attrs:{id:"架构支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#架构支持"}},[t._v("#")]),t._v(" 架构支持")]),t._v(" "),e("ul",[e("li",[t._v("基础组件库")]),t._v(" "),e("li",[t._v("状态管理vuex")]),t._v(" "),e("li",[t._v("路由vue-router")]),t._v(" "),e("li",[t._v("服务端通讯axios&jsonp")]),t._v(" "),e("li",[t._v("第三方插件")])]),t._v(" "),e("h2",{attrs:{id:"工具支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工具支持"}},[t._v("#")]),t._v(" 工具支持")]),t._v(" "),e("ul",[e("li",[t._v("脚手架工具vue-cli")]),t._v(" "),e("li",[t._v("自动化构建工具webpack")]),t._v(" "),e("li",[t._v("代码检查工具eslint")])]),t._v(" "),e("h2",{attrs:{id:"项目介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目介绍"}},[t._v("#")]),t._v(" 项目介绍")]),t._v(" "),e("p",[t._v("仿QQ音乐webapp是基于Vue2.0、vuex、vue-router、axios和html5的flexible box布局与及css3的transform、animation、transition组成")]),t._v(" "),e("p",[t._v("Vuejs是一套MVVM框架，主要注重于view层，实现数据双向绑定与及虚拟DOM，解放你的双手，让你不用直接和真实的DOM进行操作，只要数据改变，vue自动检查DOM结构不同，更新DOM元素结构")]),t._v(" "),e("p",[t._v("其中开发过程之中就遇到手动操作DOM，然后再样式表之中写的样式无法发挥作用，所以使用Vuejs构建SPA单页应用的时候应该避免显示地去操作DOM结构")]),t._v(" "),e("h2",{attrs:{id:"技术栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#技术栈"}},[t._v("#")]),t._v(" 技术栈")]),t._v(" "),e("h3",{attrs:{id:"前端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端"}},[t._v("#")]),t._v(" 前端")]),t._v(" "),e("p",[t._v("Vue: 用于构建用户界面的MVVM框架，它的核心是响应的数据绑定和组系统件")]),t._v(" "),e("p",[t._v("Vue-router：为单页面提供的路由系统，项目上线前使用Lazy Loading Routes，来实现异步加载优化性能")]),t._v(" "),e("p",[t._v("Vuex：Vue集中状态管理，在多个组件共享某些状态时非常便捷")]),t._v(" "),e("p",[t._v("Vue-lazyload：第三方图片懒加载库，优化页面加载速度")]),t._v(" "),e("p",[t._v("better-scroll：使移动端滑动体验更加流畅")]),t._v(" "),e("p",[t._v("Sass：css预编译处理器")]),t._v(" "),e("p",[t._v("ES6：  ECMAScript新一代语法，模块化、解构赋值、Promise、Class等方法非常好用")]),t._v(" "),e("h3",{attrs:{id:"后端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后端"}},[t._v("#")]),t._v(" 后端")]),t._v(" "),e("p",[t._v("Node.js：利用Express起一个本地测试服务器")]),t._v(" "),e("p",[t._v("Jsonp：服务器通讯，抓取QQ音乐(移动端)数据")]),t._v(" "),e("p",[t._v("axios：服务器通讯，结合Node.js代理后端请求，抓取QQ音乐(PC端)数据，自动化构建及其他工具")]),t._v(" "),e("p",[t._v("vue-cli：Vue脚手架工具，快速初始化项目代码")]),t._v(" "),e("p",[t._v("eslint：代码风格检查工具，规范代码书写")]),t._v(" "),e("p",[t._v("vConsole：移动端调试工具，在移动端输出日志")]),t._v(" "),e("h2",{attrs:{id:"源码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[t._v("#")]),t._v(" 源码")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("https://github.com/shifengming/vue-music\n")])])]),e("h2",{attrs:{id:"效果图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#效果图"}},[t._v("#")]),t._v(" 效果图")]),t._v(" "),e("h3",{attrs:{id:"推荐页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐页面"}},[t._v("#")]),t._v(" 推荐页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3ce066dea4bac?w=606&h=1078&f=png&s=393996",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"歌手页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌手页面"}},[t._v("#")]),t._v(" 歌手页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d16b063a9766?w=1242&h=2061&f=jpeg&s=192641",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"歌手详情页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌手详情页"}},[t._v("#")]),t._v(" 歌手详情页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d189f1c537bb?w=1242&h=2067&f=jpeg&s=219582",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"播放器页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#播放器页面"}},[t._v("#")]),t._v(" 播放器页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d1dece40fe23?w=1242&h=2070&f=jpeg&s=363508",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"歌单页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌单页面"}},[t._v("#")]),t._v(" 歌单页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/27/16f46855efba9786?w=374&h=665&f=png&s=140591",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"排行榜页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排行榜页面"}},[t._v("#")]),t._v(" 排行榜页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d20cd038149e?w=1242&h=2056&f=jpeg&s=256563",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"榜单列表页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#榜单列表页"}},[t._v("#")]),t._v(" 榜单列表页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbb2f9dc87f7?w=1242&h=2088&f=jpeg&s=235690",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"搜索页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搜索页面"}},[t._v("#")]),t._v(" 搜索页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbc52482240f?w=1242&h=2061&f=jpeg&s=160394",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"歌典列表页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌典列表页"}},[t._v("#")]),t._v(" 歌典列表页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbd7d34860dc?w=1242&h=2070&f=jpeg&s=175771",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h3",{attrs:{id:"用户中心页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户中心页"}},[t._v("#")]),t._v(" 用户中心页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbe1bd20e458?w=1242&h=2079&f=jpeg&s=110868",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h2",{attrs:{id:"项目目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目目录"}},[t._v("#")]),t._v(" 项目目录")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/26/16f4117118e17e28?w=734&h=2747&f=jpeg&s=314879",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h2",{attrs:{id:"搭建运行环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭建运行环境"}},[t._v("#")]),t._v(" 搭建运行环境")]),t._v(" "),e("p",[t._v("检查node是否安装")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("node -v\n")])])]),e("p",[t._v("安装vue-cli脚手架")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" npm install -g vue-cli\n")])])]),e("p",[t._v("安装项目模板，这里的vue-music是你模板文件的名字，可自定义")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" vue init webpack vue-music\n")])])]),e("p",[t._v("安装完后会需要填写或确认一些内容，自己根据需要进行填写和确认")]),t._v(" "),e("p",[t._v("然后返回包的根目录")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" cd vue-music\n")])])]),e("p",[t._v("再安装依赖")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" npm install\n")])])]),e("p",[t._v("运行")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" npm run dev\n")])])]),e("p",[t._v("安装jsonp")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install jsonp -S\n")])])]),e("h2",{attrs:{id:"推荐页面-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐页面-2"}},[t._v("#")]),t._v(" 推荐页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3ce066dea4bac?w=606&h=1078&f=png&s=393996",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("上部分是一个轮播图组件，使用第三方库better-srcoll辅助实现，使用jsonp抓取QQ音乐移动端数据")]),t._v(" "),e("p",[t._v("用到了es6对象合并方法Object.assign,浅拷贝的方法")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import jsonp from 'common/js/jsonp'\nimport {commonParams, oprions} from './config'\n\n// 获取推荐信息\nexport function getRecommend () {\n  const url = 'https://c.y.qq.com/musichall/fcgi-bin/fcg_yqqhomepagerecommend.fcg'\n  const data = Object.assign({}, commonParams, {\n    platform: 'h5',\n    uin: 0,\n    needNewCode: 1\n  })\n  return jsonp(url, data, oprions)\n}\n")])])]),e("p",[t._v("因为api/config.js数据是爬的，所以定义了通用的参数对象，私有的参数通过assign方法添加")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 通用参数\nexport const commonParams = {\n    g_tk: 1928093487,\n    inCharset: 'utf-8',\n    outCharset: 'utf-8',\n    notice: 0,\n    format: 'jsonp'\n  }\n  \n  export const oprions = {\n    param: 'jsonpCallback'\n  }\n  \n  export const ERR_OK = 0\n")])])]),e("p",[t._v("components/recommend.vue在组件中调用接口")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  export default {\n  name: 'recommend',\n  data () {\n    return {\n      recommends: [], // 轮播数据\n    }\n  },\n   created () {\n    // 获取推荐数据\n    this._getRecommend()\n    // 获取歌单信息\n    // setTimeout(() => {\n    //   this._getDiscList()\n    // }, 1000)\n  },\n  methods: {\n    _getRecommend () {\n      getRecommend().then((res) => {\n        if (res.code === ERR_OK) {\n          this.recommends = res.data.slider\n        }\n      })\n    }\n  },\n  components: {\n    Slider\n  }\n}\n")])])]),e("p",[t._v('这里用到了slider组件以及slot的知识，有个很需要注意的地方，因为数据响应必须确定有数据v-if="recommends.length"才能保证插槽的正确性')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\x3c!-- 此处通过v-if来解决异步请求，等推荐请求到数据后再执行渲染下面轮播组件 --\x3e\n            <div v-if="recommends.length" class="slider-wrapper">\n                <slider>\n                    <div v-for="(item,index) in recommends" :key="index">\n                        <a :href="item.linkUrl">\n                            <img class="needsclick" @load="loadImage" :src="item.picUrl"/>\n                        </a>\n                    </div>\n                </slider>\n             </div>\n')])])]),e("p",[t._v("下部分是一个歌单推荐列表，使用 axios + Node.js 代理后端请求，绕过主机限制 (伪造 headers)，抓取 QQ音乐(PC端)数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 获取歌单数据\nexport function getDiscList () {\n  const url = '/api/getDiscList'\n  const data = Object.assign({}, commonParams, {\n    platform: 'h5',\n    hostUin: 0,\n    sin: 0,\n    ein: 29,\n    sortId: 5,\n    needNewCode: 0,\n    categoryId: 10000000,\n    rnd: Math.random(),\n    format: 'json',\n    g_tk: 219344,\n    uin: 2789770398,\n    _: 1542077892080\n  })\n\n  return axios.get(url, {\n    params: data\n  }).then((res) => {\n    return Promise.resolve(res.data)\n  })\n}\n")])])]),e("p",[t._v("歌单推荐图片，使图片懒加载技术vue-lazyload，优化页面加载速度")]),t._v(" "),e("p",[t._v("在入口文件main.js")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import VueLazyLoad from 'vue-lazyload'\n\nVue.use(VueLazyload, {\n  loading: require('common/image/default.png')  //传一个默认参数\n})\n")])])]),e("p",[t._v("为了更好的用户体验，当数据未请求到时，显示loading组件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('  <div class="loading-container" v-show="!discList.length">\n    <loading></loading>\n  </div>\n')])])]),e("h2",{attrs:{id:"歌手页面-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌手页面-2"}},[t._v("#")]),t._v(" 歌手页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d16b063a9766?w=1242&h=2061&f=jpeg&s=192641",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("左侧是一个歌手列表，使用 jsonp 抓取 QQ音乐(PC端)歌手数据并重组 JSON 数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import jsonp from 'common/js/jsonp'\nimport {commonParams, oprions} from './config'\n/**\n * 获取歌手列表\n */\nexport function getSingerList () {\n  const url = 'https://c.y.qq.com/v8/fcg-bin/v8.fcg'\n  const data = Object.assign({}, commonParams, {\n    channel: 'singer',\n    page: 'list',\n    key: 'all_all_all',\n    pagesize: 100,\n    pagenum: 1,\n    hostUin: 0,\n    needNewCode: 0,\n    platform: 'yqq',\n    g_tk: 1664029744\n  })\n  return jsonp(url, data, oprions)\n}\n")])])]),e("p",[t._v("列表图片使用懒加载技术 vue-lazyload，优化页面加载速度")]),t._v(" "),e("p",[t._v("在入口文件main.js")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import VueLazyLoad from 'vue-lazyload'\n\nVue.use(VueLazyload, {\n  loading: require('common/image/default.png')  //传一个默认参数\n})\n")])])]),e("p",[t._v("右侧是一个字母列表，与左侧歌手列表联动，滚动固定标题实现")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<template>\n    <div class=\"singer\" ref=\"singer\">\n      <list-view @select=\"selectSinger\" :data=\"singers\"></list-view>\n      <router-view></router-view>\n    </div>\n</template>\n\n<script>\nimport {getSingerList} from 'api/singer'\nimport {ERR_OK} from 'api/config'\nimport Singer from 'common/js/singer'\nimport ListView from 'base/listview/listview'\nimport {mapMutations} from 'vuex'\n\nconst HOT_NAME = '热门'\nconst HOT_SINGER_LEN = 10 // 热门数据10条\nexport default {\n  name: 'singer',\n  data () {\n    return {\n      singers: []\n    }\n  },\n  created () {\n    this._getSingerList()\n  },\n  methods: {\n    _getSingerList () {\n      getSingerList().then((res) => {\n        console.log(res)\n        if (res.code === ERR_OK) {\n          this.singers = this._normalizeSinger(res.data.list)\n        }\n      })\n    },\n    selectSinger (singer) {\n      // console.log(singer)\n      // vue的编程式开发\n      this.$router.push({\n        path: `/singer/${singer.id}`\n      })\n      //调用被映射出来的方法，把数据传递到vuex里面，到这一步完成setter设置\n      this.setSinger(singer)\n    },\n    // 规范歌手\n    _normalizeSinger (list) {\n      let map = {\n        hot: { // 热门数据\n          title: HOT_NAME,\n          items: []\n        }\n      }\n      list.forEach((item, index) => {\n        // 整个数据的前十条为热门数据\n        if (index < HOT_SINGER_LEN) {\n          map.hot.items.push(new Singer({\n            name: item.Fsinger_name,\n            id: item.Fsinger_mid\n          }))\n        }\n        // 通过Findex进行聚类\n        const key = item.Findex\n        // 判断map中有没这个key\n        if (!map[key]) {\n          map[key] = {\n            title: key,\n            items: []\n          }\n        }\n        map[key].items.push(new Singer({\n          name: item.Fsinger_name,\n          id: item.Fsinger_mid\n        }))\n      })\n      // console.log(map)\n      // 为了得到有序列表，我们需要处理 map\n      let ret = [] // 字母A-Z\n      let hot = [] // 热门\n      for (let key in map) {\n        let val = map[key]\n        if (val.title.match(/[a-zA-Z]/)) {\n          ret.push(val)\n        } else if (val.title === HOT_NAME) {\n          hot.push(val)\n        }\n      }\n      // 对ret按字母的升序进行排列\n      ret.sort((a, b) => {\n        return a.title.charCodeAt(0) - b.title.charCodeAt(0)\n      })\n      // console.log(hot.concat(ret))\n      return hot.concat(ret)\n    },\n    ...mapMutations({\n      setSinger: 'SET_SINGER'\n    })\n  },\n  components: {\n    ListView\n  }\n}\n")])])]),e("h2",{attrs:{id:"歌手详情页-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌手详情页-2"}},[t._v("#")]),t._v(" 歌手详情页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d189f1c537bb?w=1242&h=2067&f=jpeg&s=219582",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("复用歌单详情页，只改变传入的参数，数据同样爬取自 QQ音乐")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export function getSingerDetail (stringId) {\n  const url = 'https://c.y.qq.com/v8/fcg-bin/fcg_v8_singer_track_cp.fcg'\n  const data = Object.assign({}, commonParams, {\n    hostUin: 0,\n    needNewCode: 0,\n    platform: 'yqq',\n    order: 'listen',\n    begin: 0,\n    num: 80,\n    songstatus: 1,\n    g_tk: 1664029744,\n    singermid: stringId\n  })\n  return jsonp(url, data, oprions)\n}\n")])])]),e("p",[t._v("详情页里面的transition动画")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".slider-enter-active, .slider-leave-active\ntransition: all 0.5s\n.slider-enter, .slider-leave-to\ntransform: translate3d(100%, 0, 0)\n")])])]),e("h2",{attrs:{id:"播放器页面-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#播放器页面-2"}},[t._v("#")]),t._v(" 播放器页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d1dece40fe23?w=1242&h=2070&f=jpeg&s=363508",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("把播放器组件放在App.vue下")]),t._v(" "),e("p",[t._v("因为它是一个跟任何路由都不相关的东西。在任何路由下，它都可以去播放。切换路由并不会影响播放器的播放")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\x3c!--应用相关的播放器--\x3e\n<player></player>\n\nimport Player from 'components/player/player'\nexport default {\n  name: 'App',\n  components: {\n    Player\n  }\n}\n")])])]),e("p",[t._v("点击歌手/歌单 都会进入详情页，详情页created()会根据点击的歌手请求相应的数据，然后利用_normalizeSongs将数据整理，其中很重要的函数是createSong,生成自定义song类，方便以后阅读")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("created () {\n    // console.log(this.singer)\n    this._getDetail()\n  },\n  methods: {\n    _getDetail () {\n      // 在歌曲列表详情页刷新时，跳回歌手列表页面\n      if (!this.singer.id) {\n        this.$router.push('/singer')\n        return\n      }\n      // 获取歌曲列表的接口\n      getSingerDetail(this.singer.id).then((res) => {\n        if (res.code === ERR_OK) {\n          console.log(res)\n          this.songs = this._normallizeSongs(res.data.list)\n          // console.log(this.songs)\n        }\n      })\n    },\n    _normallizeSongs (list) {\n      let ret = []\n      // 遍历之前要检查list是否存在，不然会报错：Cannot read property 'forEach' of underfined\n      if (!list) {\n        return\n      }\n      list.forEach((item) => {\n        // 对象的结构赋值\n        let {musicData} = item\n        // if (musicData.songid && musicData.albummid) {\n        //   ret.push(createSong(musicData))\n        // }\n        if (musicData.songid && musicData.albummid) {\n          getMusic(musicData.songmid).then(res => {\n            // console.log(res)\n            if (res.code === ERR_OK) {\n              const svkey = res.data.items\n              const songVkey = svkey[0].vkey\n              const newSong = createSong(musicData, songVkey)\n              ret.push(newSong)\n            }\n          })\n        }\n      })\n      return ret\n    }\n  },\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export function createSong1 (musicData) {\n  return new Song({\n    id: musicData.songid,\n    mid: musicData.songmid,\n    singer: filerSinger(musicData.singer),\n    name: musicData.songname,\n    album: musicData.albumname,\n    duration: musicData.interval,\n    image: `https://y.gtimg.cn/music/photo_new/T002R300x300M000${musicData.albummid}.jpg?max_age=2592000`,\n    // 歌源url\n    url: `http://ws.stream.qqmusic.qq.com/C100/${musicData.songid}.m4a?fromtag=0&guid=126548448`\n  })\n}\nexport function createSong2 (musicData) {\n  return new Singer({\n    mid: musicData.singerMID,\n    singer: musicData.fsinger,\n    name: musicData.fsong\n  })\n}\nexport function createSong (musicData, songVkey) {\n  return new Song({\n    id: musicData.songid,\n    mid: musicData.songmid,\n    singer: filerSinger(musicData.singer),\n    name: musicData.songname,\n    album: musicData.albumname,\n    duration: musicData.interval,\n    image: `https://y.gtimg.cn/music/photo_new/T002R300x300M000${musicData.albummid}.jpg?max_age=2592000`,\n    // 歌源url\n    url: `http://dl.stream.qqmusic.qq.com/C400${musicData.songmid}.m4a?vkey=${songVkey}&guid=1849502645&fromtag=66`\n  })\n}\n")])])]),e("p",[t._v("播放器图片旋转")]),t._v(" "),e("p",[t._v("animation-play-state CSS 属性定义一个动画是否运行或者暂停。可以通过查询它来确定动画是否正在运行。另外，它的值可以被设置为暂停和恢复的动画的重放")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  &.pause\n    animation-play-state: paused\n")])])]),e("p",[t._v("播放器、进度条功能")]),t._v(" "),e("p",[t._v("在progress上监听touchstart、touchmove、touchend三个事件")]),t._v(" "),e("p",[t._v("touchstart")]),t._v(" "),e("blockquote",[e("p",[t._v("获取第一次点击的横坐标和已播放的进度条长度")])]),t._v(" "),e("p",[t._v("touchmove")]),t._v(" "),e("blockquote",[e("p",[t._v("获取移动后的横坐标，并定义delta为移动后坐标，第一次点击的横坐标")])]),t._v(" "),e("p",[t._v("touchend")]),t._v(" "),e("blockquote",[e("p",[t._v("一些组件特有的逻辑，和进度条不太相关")])]),t._v(" "),e("p",[t._v("设置 偏移量 offsetWidth 为 已播放的进度条长度 + delta\n在去设置 progress 和 progressBtn 的宽度和transform 量都为 offsetWidth")]),t._v(" "),e("p",[t._v("而点击任意位置，移动进度按钮，则是通过为 progress 进度条添加点击事件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<div class=\"middle\"\n     @touchstart.prevent=\"middleTouchStart\"\n     @touchmove.prevent=\"middleTouchMove\"\n     @touchend=\"middleTouchEnd\"\n>\n\n  middleTouchStart (e) {\n      this.touch.initiated = true\n      const touch = e.touches[0]\n      this.touch.startX = touch.pageX\n      this.touch.startY = touch.pageY\n    },\n    middleTouchMove (e) {\n      if (!this.touch.initiated) {\n        return\n      }\n      const touch = e.touches[0]\n      const deltaX = touch.pageX - this.touch.startX\n      const deltaY = touch.pageY - this.touch.startY\n      if (Math.abs(deltaY) > Math.abs(deltaX)) {\n        return\n      }\n      const left = this.currentShow === 'cd' ? 0 : -window.innerWidth\n      const offsetWidth = Math.min(0, Math.max(-window.innerWidth, left + deltaX))\n      this.touch.percent = Math.abs(offsetWidth / window.innerWidth)\n      this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n      this.$refs.lyricList.$el.style[transitionDuration] = 0\n      this.$refs.middleL.style.opacity = 1 - this.touch.percent\n      this.$refs.middleL.style[transitionDuration] = 0\n    },\n    middleTouchEnd () {\n      let offsetWidth\n      let opacity\n      if (this.currentShow === 'cd') {\n        if (this.touch.percent > 0.1) {\n          offsetWidth = -window.innerWidth\n          opacity = 0\n          this.currentShow = 'lyric'\n        } else {\n          offsetWidth = 0\n          opacity = 1\n        }\n      } else {\n        if (this.touch.percent < 0.9) {\n          offsetWidth = 0\n          this.currentShow = 'cd'\n          opacity = 1\n        } else {\n          offsetWidth = -window.innerWidth\n          opacity = 0\n        }\n      }\n      const time = 300\n      this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n      this.$refs.lyricList.$el.style[transitionDuration] = `${time}ms`\n      this.$refs.middleL.style.opacity = opacity\n      this.$refs.middleL.style[transitionDuration] = `${time}ms`\n      this.touch.initiated = false\n    },\n")])])]),e("p",[t._v("圆形进度条")]),t._v(" "),e("blockquote",[e("p",[t._v("利用SVG实现，其中有两个圆，一个是背景图形，另一个为已播放的图形进度")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div class="progress-circle">\n        <svg :width="radius" :height="radius" viewBox="0 0 100 100" version="1.1" xmlns="http://www.w3.org/2000/svg">\n        \x3c!-- 写的32，但是半径是50，为什么还可以正常的铺在svg里面呢？因为viewBox，可以理解为一个舞台的大小 --\x3e\n        \x3c!--r为半径，cx,cy是圆心坐标--\x3e\n        <circle class="progress-background" r="50" cx="50" cy="50" fill="transparent"/>\n        <circle class="progress-bar" r="50" cx="50" cy="50" fill="transparent" :stroke-dasharray="dashArray" :stroke-dashoffset="dashOffset"/>\n        </svg>\n        <slot></slot>\n    </div>\n')])])]),e("p",[t._v("歌词lyric")]),t._v(" "),e("p",[t._v("获取歌词，虽然我们约定返回数据是 json，但QQ音乐 返回的是依然是 jsonp，所以我们需要做一层数据的处理")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const reg = /^\\w+\\(({.+})\\)$/\n")])])]),e("p",[t._v("就是将返回的jsonp格式摘取出我们需要的json字段")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("ret = JSON.parse(matches[1])\n")])])]),e("p",[t._v("将正则分组（就是正则括号内的内容）捕获的json字符串数据 转成 json 格式")]),t._v(" "),e("p",[t._v("然后我们在 player 组件中监听 currentSong 的变化，获取 this.currentSong.getLyric()")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 封装获取歌词的逻辑\n    getLyric () {\n      this.currentSong.getLyric().then((lyric) => {\n        // console.log(lyric)\n        if (this.currentSong.lyric !== lyric) {\n          return\n        }\n        this.currentLyric = new Lyric(lyric, this.handleLyric)\n        if (this.playing) {\n          this.currentLyric.play()\n        }\n      }).catch(() => {\n        this.currentLyric = null\n        this.playingLyric = ''\n        this.currentLineNum = 0\n      })\n    },\n")])])]),e("p",[t._v("歌词滚动")]),t._v(" "),e("p",[t._v("当前歌曲的歌词高亮是利用 js-lyric 会派发的 handle 事件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("this.currentLyric = new Lyric(lyric, this.handleLyric)\n")])])]),e("p",[t._v("js-lyric 会在每次改变当前歌词时触发这个函数，函数的参数为 当前的 lineNum 和 txt")]),t._v(" "),e("p",[t._v("当前高亮歌词保持最中间 是利用了 BScroll 滚动至高亮的歌词")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("   handleLyric ({lineNum, txt}) {\n      this.currentLineNum = lineNum\n      if (lineNum > 5) {\n        let lineEl = this.$refs.lyricLine[lineNum - 5]\n        this.$refs.lyricList.scrollToElement(lineEl, 1000)\n      } else {\n        this.$refs.lyricList.scrollTo(0, 0, 1000)\n      }\n      this.playingLyric = txt\n    },\n")])])]),e("p",[t._v("cd与歌词之间滚动")]),t._v(" "),e("p",[t._v("通过监听 middle 的 三个 touch 事件")]),t._v(" "),e("p",[t._v("offsetWidth 是为了计算歌词列表的一个偏移量的，首先它的偏移量不能大于0，也不能小于 -window.innerWidth")]),t._v(" "),e("p",[t._v("left 是根据当前显示的是 cd 还是歌词列表初始化的位置，如果是 cd，那么 left 为 0 ，歌词是从右往左拖的，deltaX 是小于 0 的，所以最终它的偏移量就是 0+deltaX；如果已经显示歌词了，那么 left 为 -window.innerWidth，歌词是从左往右拖，deltaX 是大于 0 的，所以最终它的偏移量就是 -window.innerWidth + deltaX")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    middleTouchStart (e) {\n      this.touch.initiated = true\n      const touch = e.touches[0]\n      this.touch.startX = touch.pageX\n      this.touch.startY = touch.pageY\n    },\n    middleTouchMove (e) {\n      if (!this.touch.initiated) {\n        return\n      }\n      const touch = e.touches[0]\n      const deltaX = touch.pageX - this.touch.startX\n      const deltaY = touch.pageY - this.touch.startY\n      if (Math.abs(deltaY) > Math.abs(deltaX)) {\n        return\n      }\n      const left = this.currentShow === 'cd' ? 0 : -window.innerWidth\n      const offsetWidth = Math.min(0, Math.max(-window.innerWidth, left + deltaX))\n      this.touch.percent = Math.abs(offsetWidth / window.innerWidth)\n      this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n      this.$refs.lyricList.$el.style[transitionDuration] = 0\n      this.$refs.middleL.style.opacity = 1 - this.touch.percent\n      this.$refs.middleL.style[transitionDuration] = 0\n    },\n    middleTouchEnd () {\n      let offsetWidth\n      let opacity\n      if (this.currentShow === 'cd') {\n        if (this.touch.percent > 0.1) {\n          offsetWidth = -window.innerWidth\n          opacity = 0\n          this.currentShow = 'lyric'\n        } else {\n          offsetWidth = 0\n          opacity = 1\n        }\n      } else {\n        if (this.touch.percent < 0.9) {\n          offsetWidth = 0\n          this.currentShow = 'cd'\n          opacity = 1\n        } else {\n          offsetWidth = -window.innerWidth\n          opacity = 0\n        }\n      }\n      const time = 300\n      this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n      this.$refs.lyricList.$el.style[transitionDuration] = `${time}ms`\n      this.$refs.middleL.style.opacity = opacity\n      this.$refs.middleL.style[transitionDuration] = `${time}ms`\n      this.touch.initiated = false\n    },\n")])])]),e("h2",{attrs:{id:"歌单页面-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌单页面-2"}},[t._v("#")]),t._v(" 歌单页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/27/16f46855efba9786?w=374&h=665&f=png&s=140591",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("计数获取背景图片高度")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  mounted () {\n    this.imageHeight = this.$refs.bgImage.clientHeight\n    this.minTransalteY = -this.imageHeight + RESERVED_HEIGHT\n    this.$refs.list.$el.style.top = `${this.imageHeight}px`\n  },\n")])])]),e("p",[t._v("设置scroll的偏移量")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  watch: {\n    scrollY (newVal) {\n      let translateY = Math.max(this.minTransalteY, newVal)\n      let scale = 1\n      let zIndex = 0\n      // let blur = 0\n      const percent = Math.abs(newVal / this.imageHeight)\n      if (newVal > 0) {\n        scale = 1 + percent\n        zIndex = 10\n      }\n      // else {\n      //   blur = Math.min(20, percent * 20)\n      // }\n      this.$refs.layer.style[transform] = `translate3d(0,${translateY}px,0)`\n      // this.$refs.filter.style[backdrop] = `blur(${blur}px)`\n      if (newVal < this.minTransalteY) {\n        zIndex = 10\n        this.$refs.bgImage.style.paddingTop = 0\n        this.$refs.bgImage.style.height = `${RESERVED_HEIGHT}px`\n        this.$refs.playBtn.style.display = 'none'\n      } else {\n        this.$refs.bgImage.style.paddingTop = '70%'\n        this.$refs.bgImage.style.height = 0\n        this.$refs.playBtn.style.display = ''\n      }\n    }\n  }\n")])])]),e("p",[t._v("下拉背景图片伸缩")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("      this.$refs.bgImage.style[transform] = `scale(${scale})`\n      this.$refs.bgImage.style.zIndex = zIndex\n")])])]),e("h2",{attrs:{id:"排行榜页面-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排行榜页面-2"}},[t._v("#")]),t._v(" 排行榜页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3d20cd038149e?w=1242&h=2056&f=jpeg&s=256563",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("普通组件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('    <transition name="slide">\n      <music-list :rank="rank" :title="title" :bg-image="bgImage" :songs="songs"></music-list>\n    </transition>\n')])])]),e("p",[t._v("使用jsonp抓取QQ音乐移动端数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import jsonp from 'common/js/jsonp'\nimport {commonParams, oprions} from './config'\n// 获取推荐歌曲接口\nexport function getTopList () {\n  const url = 'https://c.y.qq.com/v8/fcg-bin/fcg_myqq_toplist.fcg'\n  const data = Object.assign({}, commonParams, {\n    uin: 0,\n    needNewCode: 1,\n    platform: 'h5'\n  })\n  return jsonp(url, data, oprions)\n}\n")])])]),e("h2",{attrs:{id:"榜单列表页-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#榜单列表页-2"}},[t._v("#")]),t._v(" 榜单列表页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbb2f9dc87f7?w=1242&h=2088&f=jpeg&s=235690",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("爬取QQ音乐数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export function getMusicList (topid) {\n  const url = 'https://c.y.qq.com/v8/fcg-bin/fcg_v8_toplist_cp.fcg'\n  const data = Object.assign({}, commonParams, {\n    topid: topid,\n    needNewCode: 1,\n    uin: 0,\n    tpl: 3,\n    page: 'detail',\n    type: 'top',\n    platform: 'h5'\n  })\n  return jsonp(url, data, oprions)\n}\n")])])]),e("h2",{attrs:{id:"搜索页面-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搜索页面-2"}},[t._v("#")]),t._v(" 搜索页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbc52482240f?w=1242&h=2061&f=jpeg&s=160394",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("抓数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import jsonp from 'common/js/jsonp'\nimport {commonParams, oprions} from './config'\n/**\n * jsonp 抓取热门搜索数据\n * 接口：https://c.y.qq.com/splcloud/fcgi-bin/gethotkey.fcg\n * 提供方：https://m.y.qq.com/#search\n */\nexport function getHotKey () {\n  const url = 'https://c.y.qq.com/splcloud/fcgi-bin/gethotkey.fcg'\n  const data = Object.assign({}, commonParams, {\n    uin: 0,\n    needNewCode: 1,\n    platform: 'h5'\n  })\n  return jsonp(url, data, oprions)\n}\n\n * jsonp 抓取搜索检索数据\n * 接口：https://c.y.qq.com/soso/fcgi-bin/search_for_qq_cp\n * 提供方：https://m.y.qq.com/#search\n */\nexport function search (query, page, perpage, zhida) {\n  let url = 'https://c.y.qq.com/soso/fcgi-bin/client_search_cp'\n  let data = Object.assign({}, commonParams, {\n    w: query,\n    p: page,\n    n: perpage,\n    perpage,\n    zhidaqu: 1,\n    catZhida: zhida ? 1 : 0,\n    t: 0,\n    flag: 1,\n    ie: 'utf-8',\n    sem: 1,\n    aggr: 1,\n    uin: 0,\n    platform: 'h5',\n    uid: 0,\n    needNewCode: 1,\n    remoteplace: 'txt.mqq.all',\n    g_tk: 5381\n  })\n  return jsonp(url, data, oprions)\n}\n")])])]),e("p",[t._v("对滚动前的input做了blur()操作")]),t._v(" "),e("blockquote",[e("p",[t._v("考虑到移动端键盘占屏的问题")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('    <div class="search-result" v-show="query" ref="searchResult">\n      <suggest @select="saveSearch" ref="suggest" @listScroll="blurInput" :query="query" :zhida="zhida"></suggest>\n    </div>\n    \n       // 使输入框去掉焦点\n    blurInput () {\n      this.$refs.searchBox.blur()\n    },\n')])])]),e("p",[t._v("保存搜索结果")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" ...mapActions([\n      'saveSearchHistory',\n      'deleteSearchHistory',\n      'clearSearchHistory'\n    ])\n")])])]),e("h2",{attrs:{id:"歌典列表页-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#歌典列表页-2"}},[t._v("#")]),t._v(" 歌典列表页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbd7d34860dc?w=1242&h=2070&f=jpeg&s=175771",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("显示和管理当前播放歌曲")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    // 单曲循环\n    loop () {\n      // 将audio标签的当前时间currentTime设置为0进度条就会跑到最左边\n      this.$refs.audio.currentTime = 0\n      // 然后打开播放\n      this.$refs.audio.play()\n      this.setPlayingState(true)\n      // 如果在单曲循环中再次播放时，就会出现歌词不会跳转到起始位置\n      if (this.currentLyric) {\n        this.currentLyric.seek(0)\n      }\n    },\n    // 下一首歌\n    next () {\n      // 如果歌曲没有加载好就不让执行下一首歌\n      if (!this.songReady) {\n        return\n      }\n      if (this.playlist.length === 1) {\n        this.loop()\n        return\n      } else {\n        // 下一首索引值加1\n        let index = this.currentIndex + 1\n        // 顺序播放的情况\n        if (index === this.playlist.length) {\n          index = 0\n        }\n        // 调用mutation的方法\n        this.setCurrentIndex(index)\n        // 如果歌曲暂停时点击下一首歌要触发歌曲播放\n        if (!this.playing) {\n          this.togglePlaying()\n        }\n      }\n      // 点击下一首歌后将原先的状态变为false\n      this.songReady = false\n    },\n    // 上一首歌\n    prev () {\n      // 如果歌曲没有加载好就不让执行上一首歌\n      if (!this.songReady) {\n        return\n      }\n      if (this.playlist.length === 1) {\n        this.loop()\n        return\n      } else {\n        let index = this.currentIndex - 1\n        if (index === -1) {\n          index = this.playlist.length - 1\n        }\n        // 调用mutation的方法\n        this.setCurrentIndex(index)\n        // 如果歌曲暂停时点击上一首歌要触发歌曲播放\n        if (!this.playing) {\n          this.togglePlaying()\n        }\n      }\n      // 点击下一首歌后将原先的状态变为false\n      this.songReady = false\n    },\n")])])]),e("h2",{attrs:{id:"用户中心页-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户中心页-2"}},[t._v("#")]),t._v(" 用户中心页")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/25/16f3dbe1bd20e458?w=1242&h=2079&f=jpeg&s=110868",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("“我的收藏” 和 “最近播放” 反映到界面上")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  data () {\n    return {\n      currentIndex: 0,\n      switches: [\n        {\n          name: '我喜欢的'\n        },\n        {\n          name: '最近听的'\n        }\n      ]\n    }\n  },\n  computed: {\n    noResult () {\n      if (this.currentIndex === 0) {\n        return !this.favoriteList.length\n      } else {\n        return !this.playHistory.length\n      }\n    },\n    noResultDesc () {\n      if (this.currentIndex === 0) {\n        return '暂无收藏歌曲'\n      } else {\n        return '你还没有听过歌曲'\n      }\n    },\n    ...mapGetters([\n      'favoriteList',\n      'playHistory'\n    ])\n  },\n  methods: {\n    handlePlaylist (playlist) {\n      const bottom = playlist.length > 0 ? '60px' : ''\n      this.$refs.listWrapper.style.bottom = bottom\n      this.$refs.favoriteList && this.$refs.favoriteList.refresh()\n      this.$refs.playList && this.$refs.playList.refresh()\n    },\n    switchItem (index) {\n      this.currentIndex = index\n    },\n    selectSong (song) {\n      this.insertSong(new Song(song))\n    },\n    back () {\n      this.$router.back()\n    },\n    random () {\n      let list = this.currentIndex === 0 ? this.favoriteList : this.playHistory\n      if (list.length === 0) {\n        return\n      }\n      list = list.map((song) => {\n        return new Song(song)\n      })\n      this.randomPlay({\n        list\n      })\n    },\n    ...mapActions([\n      'insertSong',\n      'randomPlay'\n    ])\n  },\n")])])]),e("h2",{attrs:{id:"手机联调"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手机联调"}},[t._v("#")]),t._v(" 手机联调")]),t._v(" "),e("p",[t._v("手机、电脑必须是在同一WIFI下")]),t._v(" "),e("p",[t._v("把配置 config 的 index.js 里的 host 改为 '0.0.0.0'")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/27/16f45abc1e83bcf0?w=980&h=539&f=png&s=83339",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[t._v("手机可以打开电脑的IP地址+端口查看")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/27/16f45afc388e15bb?w=662&h=482&f=png&s=20874",alt:"cmd-markdown-logo"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/12/27/16f45b05fa8d337f?w=519&h=99&f=png&s=8990",alt:"cmd-markdown-logo"}})]),t._v(" "),e("h2",{attrs:{id:"移动端调试工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端调试工具"}},[t._v("#")]),t._v(" 移动端调试工具")]),t._v(" "),e("p",[t._v("移动端console：vConsole")]),t._v(" "),e("h3",{attrs:{id:"main-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#main-js"}},[t._v("#")]),t._v(" main.js")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import './common/js/vconsole'\n")])])]),e("h3",{attrs:{id:"js-console-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-console-js"}},[t._v("#")]),t._v(" js/console.js")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import Vconsole from 'vconsole'\nconst vConsole = new Vconsole()\n \nexport default vconsole\n")])])]),e("p",[t._v("移动端抓包工具：charles")])])}),[],!1,null,null,null);n.default=a.exports}}]);