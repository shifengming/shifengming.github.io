(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{228:function(v,_,t){"use strict";t.r(_);var a=t(0),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[v._v("#")]),v._v(" 题目")]),v._v(" "),t("h2",{attrs:{id:"如何创建一个ajax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何创建一个ajax"}},[v._v("#")]),v._v(" 如何创建一个ajax")]),v._v(" "),t("p",[v._v("(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象")]),v._v(" "),t("p",[v._v("(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息")]),v._v(" "),t("p",[v._v("(3)设置响应HTTP请求状态变化的函数")]),v._v(" "),t("p",[v._v("(4)发送HTTP请求")]),v._v(" "),t("p",[v._v("(5)获取异步调用返回的数据")]),v._v(" "),t("p",[v._v("(6)使用JavaScript和DOM实现局部刷新")]),v._v(" "),t("h2",{attrs:{id:"同步和异步的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同步和异步的区别"}},[v._v("#")]),v._v(" 同步和异步的区别")]),v._v(" "),t("p",[t("strong",[v._v("同步：")]),v._v("\n浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作")]),v._v(" "),t("p",[t("strong",[v._v("异步：")]),v._v("\n浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容")]),v._v(" "),t("h2",{attrs:{id:"ajax的优点和缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ajax的优点和缺点"}},[v._v("#")]),v._v(" ajax的优点和缺点")]),v._v(" "),t("p",[t("strong",[v._v("ajax的优点")])]),v._v(" "),t("p",[v._v("1、无刷新更新数据（在不刷新整个页面的情况下维持与服务器通信）")]),v._v(" "),t("p",[v._v("2、异步与服务器通信（使用异步的方式与服务器通信，不打断用户的操作）")]),v._v(" "),t("p",[v._v("3、前端和后端负载均衡（将一些后端的工作交给前端，减少服务器与宽度的负担）")]),v._v(" "),t("p",[v._v("4、界面和应用相分离（ajax将界面和应用分离也就是数据与呈现相分离）")]),v._v(" "),t("p",[t("strong",[v._v("ajax的缺点")])]),v._v(" "),t("p",[v._v("1、ajax不支持浏览器back按钮")]),v._v(" "),t("p",[v._v("2、安全问题 Aajax暴露了与服务器交互的细节")]),v._v(" "),t("p",[v._v("3、对搜索引擎的支持比较弱")]),v._v(" "),t("p",[v._v("4、破坏了Back与History后退按钮的正常行为等浏览器机制")]),v._v(" "),t("h2",{attrs:{id:"get和post的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别"}},[v._v("#")]),v._v(" get和post的区别")]),v._v(" "),t("p",[v._v("1、get和post在HTTP中都代表着请求数据，其中get请求相对来说更简单、快速，效率高些")]),v._v(" "),t("p",[v._v("2、get相对post安全性低")]),v._v(" "),t("p",[v._v("3、get有缓存，post没有")]),v._v(" "),t("p",[v._v("4、get体积小，post可以无限大")]),v._v(" "),t("p",[v._v("5、get的url参数可见，post不可见")]),v._v(" "),t("p",[v._v("6、get只接受ASCII字符的参数数据类型，post没有限制")]),v._v(" "),t("p",[v._v("7、get请求参数会保留历史记录，post中参数不会保留")]),v._v(" "),t("p",[v._v("8、get会被浏览器主动catch，post不会，需要手动设置")]),v._v(" "),t("p",[v._v("9、get在浏览器回退时无害，post会再次提交请求")]),v._v(" "),t("p",[t("strong",[v._v("什么时候使用post？")])]),v._v(" "),t("p",[v._v("post一般用于修改服务器上的资源，对所发送的信息没有限制。比如")]),v._v(" "),t("p",[v._v("1、无法使用缓存文件（更新服务器上的文件或数据库）")]),v._v(" "),t("p",[v._v("2、向服务器发送大量数据（POST 没有数据量限制）")]),v._v(" "),t("p",[v._v("3、发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠")]),v._v(" "),t("h2",{attrs:{id:"如何解决跨域问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何解决跨域问题"}},[v._v("#")]),v._v(" 如何解决跨域问题")]),v._v(" "),t("p",[v._v("跨域的概念：协议、域名、端口都相同才同域，否则都是跨域")]),v._v(" "),t("p",[t("strong",[v._v("解决跨域问题：")])]),v._v(" "),t("p",[v._v("1、使用JSONP（json+padding）把数据内填充起来"),t("br"),v._v("\n2、CORS方式（跨域资源共享），在后端上配置可跨域"),t("br"),v._v("\n3、服务器代理，通过服务器的文件能访问第三方资源")]),v._v(" "),t("h2",{attrs:{id:"什么是ajax和json，它们的优点和缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是ajax和json，它们的优点和缺点"}},[v._v("#")]),v._v(" 什么是Ajax和JSON，它们的优点和缺点")]),v._v(" "),t("p",[t("strong",[v._v("Ajax：")])]),v._v(" "),t("p",[v._v("Ajax是异步JavaScript和XML，用于在Web页面中实现异步数据交互")]),v._v(" "),t("p",[t("strong",[v._v("Ajax优点：")])]),v._v(" "),t("p",[v._v("异步请求响应快，用户体验好；页面无刷新、数据局部更新；按需取数据，减少了冗余请求和服务器的负担；")]),v._v(" "),t("p",[t("strong",[v._v("Ajax缺点：")])]),v._v(" "),t("p",[v._v("异步回调问题、this指向问题、路由跳转back问题；对搜索引擎的支持比较弱，对于一些手机还不是很好的支持")]),v._v(" "),t("p",[t("strong",[v._v("JSON：")])]),v._v(" "),t("p",[v._v("是一种轻量级的数据交换格式，看着像对象，本质是字符串")]),v._v(" "),t("p",[t("strong",[v._v("JSON优点：")])]),v._v(" "),t("p",[v._v("轻量级、易于人的阅读和编写，便于js解析，支持复合数据类型")]),v._v(" "),t("p",[t("strong",[v._v("JSON缺点：")])]),v._v(" "),t("p",[v._v("没有XML格式这么推广的深入人心和使用广泛, 没有XML那么通用性")])])}),[],!1,null,null,null);_.default=s.exports}}]);