(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{211:function(v,_,e){"use strict";e.r(_);var o=e(0),c=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"promise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[v._v("#")]),v._v(" promise")]),v._v(" "),e("h2",{attrs:{id:"promise在异步编程中的核心应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise在异步编程中的核心应用"}},[v._v("#")]),v._v(" Promise在异步编程中的核心应用")]),v._v(" "),e("p",[v._v("在使用 "),e("code",[v._v("Promise")]),v._v(" 解决工作中常见异步问题时，首先得知道其有哪些优缺点：")]),v._v(" "),e("blockquote",[e("p",[v._v("Promise 有哪些优缺点：")])]),v._v(" "),e("ul",[e("li",[v._v("优点\n"),e("ol",[e("li",[v._v("可以解决异步嵌套的问题（回调地狱）")]),v._v(" "),e("li",[v._v("可以解决异步并发的问题")]),v._v(" "),e("li",[v._v("代码更清晰、链式调用等等")])])]),v._v(" "),e("li",[v._v("缺点\n"),e("ol",[e("li",[e("code",[v._v("Promise")]),v._v(" 本身也是基于回调的")]),v._v(" "),e("li",[e("code",[v._v("Promise")]),v._v(" 无法终止，一创建立即执行，无法取消")]),v._v(" "),e("li",[v._v("当状态为 "),e("code",[v._v("Pending")]),v._v(" 时，无法得知代码进站在那个阶段（刚刚开始还是处理中）等等")])])])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：正因为有以上一些缺陷，"),e("code",[v._v("ES7")]),v._v(" 中引入了异步终极解决方案 "),e("code",[v._v("asyns + await")]),v._v("！")]),v._v(" "),e("blockquote",[e("p",[v._v("Promise 常见应用（举一例）")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("解决回调地狱")]),v._v(" "),e("p",[v._v("例：很常见的需求：获取一个文件中的内容（其中，一个文件的内容为另一个文件的文件名）")]),v._v(" "),e("p",[v._v("在不使用 "),e("code",[v._v("Promise")]),v._v(" 之前，大多都是通过回调的方式完成的。但如果是多个文件的话，会照成两个很明显的不足：一是回调嵌套层数多、而是回调异常情况不能统一。若使用 "),e("code",[v._v("Promise")]),v._v(" 可以很容易解决以上两种情况。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2eCyWfELy3pTE0.4nUJQNCuomv61MJEjW5900zZMHxtN8TASN2M61uqqQYRcuZixrg!!/b&bo=3gQmAwAAAAADB90!&rf=viewer_4",alt:""}}),e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2T4XIQ9zV2Jcs*Ax1rqDam16n6uMc5enJPIQcZEifz88AjgUH0DRe5OkdhoU9CTgxQ!!/b&bo=PwQ4BAAAAAADByU!&rf=viewer_4",alt:""}})])])]),v._v(" "),e("p",[v._v("通过以上例子，是不是觉得 "),e("code",[v._v("Promise")]),v._v(" 的用法实在太简单了。接下来，我们将详细的分不同情况的实现一套符合 "),e("code",[v._v("Promise A+ 规范")]),v._v("的 "),e("code",[v._v("Promise")]),v._v("。")]),v._v(" "),e("h2",{attrs:{id:"简版的promise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简版的promise"}},[v._v("#")]),v._v(" 简版的Promise")]),v._v(" "),e("blockquote",[e("p",[v._v("三种状态")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("Pending")]),v._v("：等待态（初始状态）")]),v._v(" "),e("li",[e("code",[v._v("Fulfilled")]),v._v("：成功态")]),v._v(" "),e("li",[e("code",[v._v("Rejected")]),v._v("：失败态")])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：状态只能从 "),e("code",[v._v("Pending")]),v._v(" 等待态 变成 "),e("code",[v._v("Fulfilled")]),v._v(" 成功态；或者从 "),e("code",[v._v("Pending")]),v._v(" 等待态 变成  "),e("code",[v._v("Rejected")]),v._v(" 失败态。并且状态一旦变成成功态或者失败态后就不能改变了。")]),v._v(" "),e("blockquote",[e("p",[v._v("执行器 - executor")])]),v._v(" "),e("p",[e("code",[v._v("Promise")]),v._v(" 默认接受一个执行器 "),e("code",[v._v("executor")]),v._v(" 作为参数，并且该执行器会默认执行。")]),v._v(" "),e("p",[v._v("执行器 "),e("code",[v._v("executor")]),v._v(" 默认接受两个参数：一个 "),e("code",[v._v("resolve")]),v._v(" 成功的回调、一个 "),e("code",[v._v("reject")]),v._v(" 失败的回调。")]),v._v(" "),e("p",[v._v("接下来，我们从处理 "),e("strong",[v._v("同步")]),v._v("、"),e("strong",[v._v("异步")]),v._v("两种情况来完善简约版的 "),e("code",[v._v("Promise")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("核心函数 - then")])]),v._v(" "),e("p",[e("code",[v._v("then")]),v._v(" 方法会接受两个参数：一个是成功时的 "),e("code",[v._v("onfulfilled")]),v._v("，一个是失败时的 "),e("code",[v._v("onrejected")]),v._v("。"),e("strong",[v._v("注意")]),v._v("："),e("code",[v._v("then")]),v._v(" 的参数是可选的。")]),v._v(" "),e("h3",{attrs:{id:"处理同步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理同步"}},[v._v("#")]),v._v(" 处理同步")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2TK72h8B3RKVOOQmbTnqtzIFmSTIn6L.*VD1GqWn0r0RLxHW5KRcuOg4fK28epmu2g!!/b&bo=OARhBQAAAAADB3o!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：在执行器 "),e("code",[v._v("executor")]),v._v("在执行时，内部有可能报错，为了代码的健全性需要给执行器添加异常处理，报错相当于执行了失败态并将报错信息传递下去。")]),v._v(" "),e("blockquote",[e("p",[v._v("验证")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("成功情况")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2ba.mvtibej1FBhbIZLNfn1b2Y1EScTseL6kkKmASwJiGxMaxUBG*9XRJXbgZqT90g!!/b&bo=RwQ4BAAAAAADB10!&rf=viewer_4",alt:""}})])]),v._v(" "),e("li",[e("p",[v._v("失败情况")]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：抛错也当成失败处理")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2WF4DOAM*Y0SgC2LCP4JFEvPb5mMItSHaraEyqd7rbA8ZB3*NAZhY3y5gxEZZsblzw!!/b&bo=OARuBAAAAAADB3Q!&rf=viewer_4",alt:""}})])])]),v._v(" "),e("p",[v._v("以上代码逻辑支持基本功能，但回调函数中存在异步代码，以上的 "),e("code",[v._v("Promise")]),v._v(" 就无法实现。请看下小节 "),e("strong",[v._v("处理异步")]),v._v(" 情况！")]),v._v(" "),e("h3",{attrs:{id:"处理异步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理异步"}},[v._v("#")]),v._v(" 处理异步")]),v._v(" "),e("p",[v._v("若回调中存在异步代码，导致 "),e("code",[v._v("Promise")]),v._v(" 实例的状态一直在 "),e("code",[v._v("Pending")]),v._v("。上节只处理了"),e("code",[v._v("Fulfilled")]),v._v(" 成功和 "),e("code",[v._v("Rejected")]),v._v(" 失败两种状态，故 "),e("code",[v._v("then")]),v._v(" 方法还需添加状态为 "),e("code",[v._v("Pending")]),v._v(" 的情况。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2ZkhAKrEBzeVoP2W7oa6Rt.3Oww3qvO6*nf45TiN*EyyzRfwboIzra9sktS.b.KGdg!!/b&bo=OARFBQAAAAADB14!&rf=viewer_4",alt:""}})]),v._v(" "),e("blockquote",[e("p",[v._v("验证")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("添加异步代码情况")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2bxBC6T9nBWLAAp1zHRvPuutvr9T.JTEQsW9tnU8in4awNw2CAevj1wkVBfJtThNdg!!/b&bo=VgT.AwAAAAADB40!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("由于 "),e("code",[v._v("JS执行机制")]),v._v(" ，当执行 "),e("code",[v._v("then")]),v._v(" 时，此时 "),e("code",[v._v("Promise")]),v._v(" 实例的状态还是 "),e("code",[v._v("Pending")]),v._v("，导致代码什么也没有输出。")])]),v._v(" "),e("li",[e("p",[v._v("在then方法中添加  "),e("code",[v._v("Pending")]),v._v(" 状态的情况")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2a0aWQ5oL5O*jPptcAWi3cpI1GXWRBGaXLA*owIcpkWG.tLO6mzbTNmf9PFvT9pP1g!!/b&bo=RwQ4BAAAAAADB10!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：在处理实例为 "),e("code",[v._v("pending")]),v._v(" 时，运用到了 "),e("strong",[v._v("发布订阅模式")]),v._v("。")])])]),v._v(" "),e("h2",{attrs:{id:"完整版的promise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完整版的promise"}},[v._v("#")]),v._v(" 完整版的Promise")]),v._v(" "),e("p",[v._v("在编写完整版 "),e("code",[v._v("Promise")]),v._v(" 前，先看下以下常见问题：")]),v._v(" "),e("ul",[e("li",[v._v("为什么要加定时器？")]),v._v(" "),e("li",[v._v("为什么在处理异步情况的时候也要加try-catch？")]),v._v(" "),e("li",[v._v("返回值 "),e("code",[v._v("x")]),v._v(" 有几种情况？")]),v._v(" "),e("li",[v._v("如何通过返回值 "),e("code",[v._v("x")]),v._v(" 去推导 "),e("code",[v._v("promise2")]),v._v(" 的状态？")]),v._v(" "),e("li",[v._v("....")])]),v._v(" "),e("p",[v._v("接下来，我们就一起揭开以上问题吧~~~")]),v._v(" "),e("h3",{attrs:{id:"核心方法-then"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心方法-then"}},[v._v("#")]),v._v(" 核心方法 - then")]),v._v(" "),e("blockquote",[e("p",[v._v("then 方法传入成功和失败的回调函数，返回一个新的Promise对象")])]),v._v(" "),e("h4",{attrs:{id:"then-的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#then-的实现原理"}},[v._v("#")]),v._v(" then 的实现原理")]),v._v(" "),e("p",[v._v("为了实现 "),e("code",[v._v("then")]),v._v(" 方法的实现原理，我们从以下两点去考虑：")]),v._v(" "),e("blockquote",[e("p",[v._v("一、当前 "),e("code",[v._v("Promise")]),v._v(" 的状态")])]),v._v(" "),e("p",[e("code",[v._v("Promise")]),v._v(" 实例调用 "),e("code",[v._v("then")]),v._v(" 方法时，此时当前 "),e("code",[v._v("Promise")]),v._v(" 的状态有可能是成功态 "),e("code",[v._v("fulfilled")]),v._v("、有可能是失败态 "),e("code",[v._v("rejected")]),v._v("、也有可能是等待态 "),e("code",[v._v("pending")]),v._v("。故，需要从这三个状态去考虑"),e("code",[v._v("then")]),v._v("的实现原理：")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("状态为成功 "),e("code",[v._v("fulfilled")])]),v._v(" "),e("p",[v._v("由于 "),e("code",[v._v("then")]),v._v(" 方法是异步执行，所以需要添加一个 "),e("code",[v._v("setTimout")]),v._v(" 将成功的回调函数 "),e("code",[v._v("onfulfilled")]),v._v(" 包裹起来，并且将成功的值 "),e("code",[v._v("value")]),v._v("传入。")])]),v._v(" "),e("li",[e("p",[v._v("状态为失败 "),e("code",[v._v("rejected")])]),v._v(" "),e("p",[v._v("由于 "),e("code",[v._v("then")]),v._v(" 方法是异步执行，所以需要添加一个 "),e("code",[v._v("setTimout")]),v._v(" 将成功的回调函数 "),e("code",[v._v("onrejected")]),v._v(" 包裹起来，并且将失败的原因 "),e("code",[v._v("reason")]),v._v("传入。")])]),v._v(" "),e("li",[e("p",[v._v("状态为等待 "),e("code",[v._v("pending")])]),v._v(" "),e("p",[v._v("当状态为 "),e("code",[v._v("Pending")]),v._v(" 时，此时需要将成功的回调函数 "),e("code",[v._v("onfulfilled")]),v._v(" 和异步的回调函数"),e("code",[v._v("onrejected")]),v._v("  分别存放到对应的存放成功回调 "),e("code",[v._v("onResolvedCallbacks")]),v._v(" 的数组中和存放失败回调 "),e("code",[v._v("onRejectedCallbacks")]),v._v(" 的数组中。等待"),e("code",[v._v("状态")]),v._v("变为"),e("code",[v._v("成功态")]),v._v("或"),e("code",[v._v("者失败态")]),v._v("时，依次执行数组里的回调函数。")])])]),v._v(" "),e("blockquote",[e("p",[v._v("二、执行 then 方法后返回新的 Promise")])]),v._v(" "),e("p",[v._v("由于执行 "),e("code",[v._v("then")]),v._v(" 方法，要返回一个新的 "),e("code",[v._v("Promise")]),v._v(" 。不管当前 "),e("code",[v._v("Promise")]),v._v(" 是哪一种状态执行后都会有一个返回值。为了可以实现"),e("strong",[v._v("链式调用")]),v._v("，需要将该返回值传递下去。成功就 "),e("code",[v._v("resolve")]),v._v("让新的 "),e("code",[v._v("Promise")]),v._v(" 状态为"),e("code",[v._v("成功态")]),v._v("，失败就 "),e("code",[v._v("reject")]),v._v("让新的 "),e("code",[v._v("Promise")]),v._v(" 状态为"),e("code",[v._v("失败态")]),v._v("。")]),v._v(" "),e("p",[v._v("在返回新的 "),e("code",[v._v("Promise")]),v._v(" 时，需要考虑以下几点：")]),v._v(" "),e("ol",[e("li",[v._v("用户一上来就 "),e("code",[v._v("resolve")]),v._v(" ，此时由于 "),e("code",[v._v("JS执行机制")]),v._v(" 的影响，会出现新返回的 "),e("code",[v._v("Promise")]),v._v(" 为 "),e("code",[v._v("undefined")]),v._v("。解决此问题，需要添加一个定时器"),e("code",[v._v("setTimeout")]),v._v("将"),e("strong",[v._v("当前上下文")]),v._v("添加到"),e("code",[v._v("异步队列")]),v._v("中等"),e("code",[v._v("new Promise")]),v._v(" 执行完后再执行逻辑。")]),v._v(" "),e("li",[v._v("用户一上来就抛错，然而我们自己写的 "),e("code",[v._v("Promise")]),v._v(" 中 "),e("code",[v._v("executor")]),v._v(" 的异常处理只能捕获"),e("strong",[v._v("同步异常")]),v._v("情况。此时，需要在处理异步的情况下也添加一个 "),e("code",[v._v("try - catch")]),v._v(" 捕获异常。如果有异常的话，直接让新返回的 "),e("code",[v._v("promise")]),v._v(" 直接 "),e("code",[v._v("reject")]),v._v("。")])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：该返回值有几种情况，下小节我们会详解")]),v._v(" "),e("blockquote",[e("p",[v._v("三、判断返回值 "),e("code",[v._v("x")]),v._v(" 去推导新返回的 "),e("code",[v._v("Promise")]),v._v(" 的状态")])]),v._v(" "),e("p",[v._v("若 "),e("code",[v._v("x")]),v._v(" 是普通值就直接 "),e("code",[v._v("resolve")]),v._v("这个值；若 "),e("code",[v._v("x")]),v._v(" 是 "),e("code",[v._v("Promise")]),v._v(" 类型的就执行"),e("code",[v._v(".then")]),v._v("看结果是成功还是失败；若 "),e("code",[v._v("x")]),v._v(" 是失败的 "),e("code",[v._v("Promise")]),v._v(" 就执行 "),e("code",[v._v("reject")]),v._v("；通过这三种情况，我们编写一个公共的方法 - "),e("code",[v._v("resolvePromise")]),v._v(" 来判断 "),e("code",[v._v("x")]),v._v(" 和新的 "),e("code",[v._v("Promise")]),v._v(" 的关系。")]),v._v(" "),e("p",[v._v("在编写公共 "),e("code",[v._v("resolvePromise")]),v._v(" 方法时， "),e("strong",[v._v("Promise A+要求的")]),v._v("需要注意一下几点：")]),v._v(" "),e("ol",[e("li",[e("p",[e("code",[v._v("x")]),v._v(" 的值不能和返回的 "),e("code",[v._v("promise")]),v._v(" 一样，否则报错。"),e("code",[v._v("new TypeError('Chaining cycle detected for promise #<Promise>'")]),v._v("。")])]),v._v(" "),e("li",[e("p",[v._v("需要编写一个功能方法 "),e("code",[v._v("isPromise")]),v._v(" 来判断 "),e("code",[v._v("x")]),v._v(" 的值是否是 "),e("code",[v._v("Promise")]),v._v(" 类型。若是，则调用"),e("code",[v._v(".then")]),v._v("方法；若不是，则为普通值，调用 "),e("code",[v._v("promise2")]),v._v(" 的 "),e("code",[v._v("resolve")]),v._v("方法，并把值传递下去。")])]),v._v(" "),e("li",[e("p",[v._v("若 "),e("code",[v._v("x")]),v._v(" 是 "),e("code",[v._v("Promise")]),v._v(" 类型时，"),e("code",[v._v("x.then")]),v._v(" 有可能报错。此时需要添加一个 "),e("code",[v._v("try-catch")]),v._v(" 异常。用 "),e("code",[v._v("promise2")]),v._v(" 的 "),e("code",[v._v("reject")]),v._v(" 方法将错误信息抛出。")])]),v._v(" "),e("li",[e("p",[v._v("若 "),e("code",[v._v("then")]),v._v(" 属性是一个函数的话，就默认规定 "),e("code",[v._v("x")]),v._v(" 是一个 "),e("code",[v._v("Promise")]),v._v(" 类型；若 "),e("code",[v._v("then")]),v._v(" 属性不是一个函数的话，就是一个普通对象，直接调用 "),e("code",[v._v("promise2")]),v._v(" 的 "),e("code",[v._v("resolve")]),v._v(" 方法并将值传入。")])]),v._v(" "),e("li",[e("p",[v._v("通过 "),e("code",[v._v("then.call(x)")]),v._v(" 是为了不用再次取 "),e("code",[v._v("then")]),v._v(" 的值，防止取不到 "),e("code",[v._v("then")]),v._v("。并且将 "),e("code",[v._v("y")]),v._v(" 作为成功回调的参数，"),e("code",[v._v("r")]),v._v(" 作为 失败回调的参数。下一层可以获取到 "),e("code",[v._v("promise2")]),v._v("返回成功的 y"),e("code",[v._v("和失败的")]),v._v("r。只需要状态成功时调用 "),e("code",[v._v("promise2")]),v._v("的 "),e("code",[v._v("resolve")]),v._v("并将 "),e("code",[v._v("y")]),v._v("传入；状态失败时调用 "),e("code",[v._v("promise2")]),v._v("的 "),e("code",[v._v("reject")]),v._v(" 并将 "),e("code",[v._v("r")]),v._v("传入。")])]),v._v(" "),e("li",[e("p",[v._v("注意 "),e("code",[v._v("y")]),v._v(" 有可能还是一个 "),e("code",[v._v("Promise")]),v._v("类型，此时需要"),e("strong",[v._v("递归")]),v._v("调用 "),e("code",[v._v("resolvePromise")]),v._v(" 方法直到 "),e("code",[v._v("y")]),v._v(" 是一个普通值。")])])]),v._v(" "),e("h3",{attrs:{id:"核心方法-resolvepromise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心方法-resolvepromise"}},[v._v("#")]),v._v(" 核心方法 - resolvePromise")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("判断对象是否是 Promise")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2aHVwEQ3yOdj5il1e5Jrjtnv7iDJHw89VG3a6zLotq5zCsIuRYH4YYiZ1qhnh*hy.g!!/b&bo=1ga6AgAAAAADB0o!&rf=viewer_4",alt:""}})])]),v._v(" "),e("li",[e("p",[v._v("完整版 Promise\n"),e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2fQOptfe.K6tmXhI7vEGqpDduFEbp2ttwTLDFdhTDqKNUgrTqpROUUc67aMwHtMlKA!!/b&bo=OASJDQAAAAADB5o!&rf=viewer_4",alt:""}})])])]),v._v(" "),e("h3",{attrs:{id:"测试promise是否符合标准"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试promise是否符合标准"}},[v._v("#")]),v._v(" 测试Promise是否符合标准")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("安装测试Promise依赖包")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("npm install promises-aplus-tests -g\n")])])])]),v._v(" "),e("li",[e("p",[v._v("编写 - 延迟对象")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2W8S6mbrL4Kc.UKoFO5f4gCr3gLHutmmIe4zifjIWWwKopfg*o0ky4L2*tmCi3AvoQ!!/b&bo=mgSWAgAAAAADByg!&rf=viewer_4",alt:""}})])]),v._v(" "),e("li",[e("p",[v._v("执行验证")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("promises-aplus-tests promise.js\n")])])]),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2Vn6Fgc*VWcfDGC6gbHQchs9G1Z6UOtUZDDMMbPEErEOkZl.dZ2Fnv6Vyg8KQimUeg!!/b&bo=TQQ4BAAAAAADB1c!&rf=viewer_4",alt:""}})])])]),v._v(" "),e("h2",{attrs:{id:"扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[v._v("#")]),v._v(" 扩展")]),v._v(" "),e("h3",{attrs:{id:"promise-resolve"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-resolve"}},[v._v("#")]),v._v(" Promise.resolve")]),v._v(" "),e("blockquote",[e("p",[v._v("Promise.resolve 的作用：返回一个 "),e("code",[v._v("fulfilled")]),v._v(" 的 "),e("code",[v._v("Promise")]),v._v(" 实例，或原始 "),e("code",[v._v("Promise")]),v._v(" 实例。")])]),v._v(" "),e("p",[v._v("在实现该功能前，我们需要了解 "),e("code",[v._v("Promise.resolve")]),v._v(" 方法中参数的情况：")]),v._v(" "),e("ol",[e("li",[v._v("若参数为空，则返回一个状态为 "),e("code",[v._v("fulfilled")]),v._v(" 的 "),e("code",[v._v("Promise")]),v._v(" 实例")]),v._v(" "),e("li",[v._v("若参数为 "),e("code",[v._v("Promise")]),v._v(" 实例，则返回这个实例，不做修改")]),v._v(" "),e("li",[v._v("若参数为普通值，则返回一个状态为 "),e("code",[v._v("fulfilled")]),v._v(" 的 "),e("code",[v._v("Promise")]),v._v(" 实例并且 "),e("code",[v._v("fulfilled")]),v._v(" 响应函数会得到这个参数")]),v._v(" "),e("li",[v._v("若参数为 "),e("code",[v._v("thenable")]),v._v(" 对象, 立即执行它的 "),e("code",[v._v(".then()")]),v._v(" 方法")])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：对象里含有 "),e("code",[v._v("then")]),v._v(" 方法就叫 "),e("code",[v._v("thenable")]),v._v(" 对象。")]),v._v(" "),e("blockquote",[e("p",[v._v("resolve 的实现")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2ZYKpYjBt3utT10*p*6wmFrkmSGABBEdcrzhdsJtsXVE.2M2vOb7Mr8KQQqkaF*hPw!!/b&bo=6Aa2AwAAAAADB3k!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("接下来，我们给不同的参数的例子来验证写的 "),e("code",[v._v("Promise.resolve")]),v._v(" 是否符合预期。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2eQkzY7X83VO1eRJTTYSJ9V5X5fBc4gtUD.8lmDL0sPHd.bwVsm5F3p.C8AswSeTlg!!/b&bo=OATXBAAAAAADB80!&rf=viewer_4",alt:""}})]),v._v(" "),e("h3",{attrs:{id:"promise-reject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-reject"}},[v._v("#")]),v._v(" Promise.reject")]),v._v(" "),e("blockquote",[e("p",[v._v("reject：返回一个状态为 "),e("code",[v._v("rejected")]),v._v(" 的 "),e("code",[v._v("Promise")]),v._v(" 实例")])]),v._v(" "),e("blockquote",[e("p",[v._v("reject 的实现")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2WUNmgLoYaMho2p0.5*4G90wHkKsKdWEIpO69TQ6KW8SJhHsB2*g92IzI*f2SYlNCQ!!/b&bo=*gTiAQAAAAADBzs!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("接下来，我们给不同的参数的例子来验证写的 "),e("code",[v._v("Promise.reject")]),v._v(" 是否符合预期。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2c3mVrSVOny1rbHhx7V9v19PSHp07irD1nxL0vDOQaAsAiOg92BinT.2RRdmD4N40g!!/b&bo=AgTeAgAAAAADB*g!&rf=viewer_4",alt:""}})]),v._v(" "),e("h3",{attrs:{id:"promise-race"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-race"}},[v._v("#")]),v._v(" Promise.race")]),v._v(" "),e("blockquote",[e("p",[v._v("race 的实现")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2UZO*grNDxXMgpJ2heNI7dm9hYMv6l98jbpESOcCBpXWHelIx74YaZ9ITu7b.0jiiw!!/b&bo=NAQCAwAAAAADBxM!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：若数组里传的不是一个 "),e("code",[v._v("Promise")]),v._v(" 对象，需要将其通过  "),e("code",[v._v("Promise.resolve")]),v._v("变成  "),e("code",[v._v("Promise")])]),v._v(" "),e("p",[v._v("接下来，我们给不同的参数的例子来验证写的 "),e("code",[v._v("Promise.race")]),v._v(" 是否符合预期。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2QlujtU2vOZlrZncq4nPBQP*kDSB0Q4pvGCjYhbVCAFuQWPBCfNTiyRbpcN1iRjJZw!!/b&bo=ZgSSAwAAAAADB9E!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：是谁最先完成，并且最先完成的成功就成功，失败就失败。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2UOq3oPAVnbpxYy.xmYGbiEX1DSwtH4Y6wksf9ymz2yH1NjtRpXEF5*2uLJVLuX7mg!!/b&bo=IgTaAwAAAAADB90!&rf=viewer_4",alt:""}})]),v._v(" "),e("h3",{attrs:{id:"promise-all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-all"}},[v._v("#")]),v._v(" Promise.all")]),v._v(" "),e("blockquote",[e("p",[v._v("all：返回一个Promise,只有当所有的promise都成功才成功，否则只有一个失败就失败")])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：若数组里传的不是一个 "),e("code",[v._v("Promise")]),v._v(" 对象，需要将其通过  "),e("code",[v._v("Promise.resolve")]),v._v("变成  "),e("code",[v._v("Promise")])]),v._v(" "),e("blockquote",[e("p",[v._v("all 的实现")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/I4OEOPrz6D2aFnaB6dwLRWGOjvkBQMuFuLf83xoEGNsAP70*Sejzyhylxqa8Jh6gtUD6lcGZGlXS9Siaul3J.2iSrixEEhnt8KgiM2tjApk!/b&bo=ygTaAwAAAAADJxU!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("接下来，我们给不同的参数的例子来验证写的 "),e("code",[v._v("Promise.all")]),v._v(" 是否符合预期。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2dBNfjmp7s5LQmboq31wt1ypukN0QmTEvOpXj6lVcgddBJkN*9PnqcQlJRzC.u5R6A!!/b&bo=*gS2AwAAAAADB20!&rf=viewer_4",alt:""}})]),v._v(" "),e("h3",{attrs:{id:"promise-finally"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-finally"}},[v._v("#")]),v._v(" Promise.finally")]),v._v(" "),e("blockquote",[e("p",[v._v("finally：最终的（无论成功或失败都会执行）")])]),v._v(" "),e("blockquote",[e("p",[v._v("finally 的实现")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2YM1cJKvqaebAzLinJQbRyDndyhBFJpG5gbnqRtgKvVaf2jrvt0vwpGYvJBdAkX0yQ!!/b&bo=ZgQCAwAAAAADB0E!&rf=viewer_4",alt:""}})]),v._v(" "),e("ul",[e("li",[v._v("高逼格代码实现 "),e("code",[v._v("finally")])])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2ZSFAblo36nlJs4l.qgT.EPrAugTyyDm9Jt8Ifs49GDxzcV2qOz6rNyjpqwP19NJgw!!/b&bo=IAVOAgAAAAADB0s!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("接下来，我们给不同的参数的例子来验证写的 "),e("code",[v._v("Promise.finally")]),v._v(" 是否符合预期。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2eRLp5jVFAueSKCWOAC6dlReHYHNqkZTno0MJrZhwje4cESDHXsRm6xjvgHJLoNZpA!!/b&bo=RwQ4BAAAAAADB10!&rf=viewer_4",alt:""}})]),v._v(" "),e("h3",{attrs:{id:"promise-catch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-catch"}},[v._v("#")]),v._v(" Promise.catch")]),v._v(" "),e("blockquote",[e("p",[v._v("catch：执行失败的回调函数，返回一个新的Promise对象")])]),v._v(" "),e("p",[e("code",[v._v("Promise.prototype.catch")]),v._v(" 方法是 "),e("code",[v._v("then(null/undefined, reject)")]),v._v(" 的别名，两者效果一样。")]),v._v(" "),e("blockquote",[e("p",[v._v("catch 的实现")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2RlxPuGXd.sZHEGlpXDCrJqDtwUkIbSHwIm5KKbicxutFrvjKIqAywIp398V22EACw!!/b&bo=VgTiAQAAAAADB5M!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("接下来，我们给不同的参数的例子来验证写的 "),e("code",[v._v("Promise.catch")]),v._v(" 是否符合预期。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2fflcyXLxN7fUKk8jWN6eXkwM6pkYDAJoPlSCzZZcOsXCCRrdJSNc*oXvGZIG8bp2A!!/b&bo=8gMiBAAAAAADB*U!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("以上一些扩展方法，其都会返回一个新的 "),e("code",[v._v("Promise")]),v._v("。然后通过其状态去执行相应的回调函数。下面通过几道有关 "),e("code",[v._v("Promise")]),v._v(" 的面试题来检测我们对  "),e("code",[v._v("Promise")]),v._v(" 的掌握程度。")]),v._v(" "),e("h2",{attrs:{id:"promise常见的面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise常见的面试题"}},[v._v("#")]),v._v(" Promise常见的面试题")]),v._v(" "),e("h3",{attrs:{id:"题目一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目一"}},[v._v("#")]),v._v(" 题目一")]),v._v(" "),e("blockquote",[e("p",[v._v("输出一下结果？")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2UOEuAF2y87o2G5Ssxq5rhqwzgJBHZ9M8kMaZ9Xea1Lr0V25qs0H4azrR17dYh5ISQ!!/b&bo=agPWBAAAAAADB5k!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("详细的分析一下这题的解题思路，首先我们要知道"),e("strong",[v._v("宏任务")]),v._v("、"),e("strong",[v._v("微任务")]),v._v("、"),e("strong",[v._v("任务队列")]),v._v("等概念：")]),v._v(" "),e("ol",[e("li",[v._v("由于``JS"),e("code",[v._v("执行机制，代码从上往下执行，先执行完同步任务再执行异步任务，将异步任务都存放对应的**任务队列**中。故，一轮输出：")]),v._v("1 "),e("code",[v._v("和")]),v._v("8`。下面分析下执行异步时的情况：")]),v._v(" "),e("li",[v._v("当代码执行到  "),e("code",[v._v("setTimeout")]),v._v(" 时，由于"),e("code",[v._v("setTimeout")]),v._v("是"),e("strong",[v._v("宏任务")]),v._v("。故将 "),e("code",[v._v("2")]),v._v(" 存放在"),e("strong",[v._v("宏任务队列")]),v._v("中等待执行。"),e("code",[v._v("Promise")]),v._v(" 相关等方法属于"),e("strong",[v._v("微任务")]),v._v("，将值依次存放在"),e("strong",[v._v("微任务队列")]),v._v("中等待执行。")]),v._v(" "),e("li",[v._v("当代码执行到 "),e("code",[v._v("new Promise")]),v._v("调用 "),e("code",[v._v(".then")]),v._v(" 方法时，由于回调函数中执行了 "),e("code",[v._v("resolve")]),v._v(" 方法，代码会走成功的回调，并且 "),e("code",[v._v("resolve")]),v._v(" 函数没有参数，所以成功的回调参数 "),e("code",[v._v("data")]),v._v(" 没有值。故，输出："),e("code",[v._v("3")]),v._v(" 和 "),e("code",[v._v("undefined")]),v._v("。")]),v._v(" "),e("li",[v._v("当代码执行到 "),e("code",[v._v("Promise.resolve")]),v._v(" 时，直接走成功的回调，并且 "),e("code",[v._v("resolve")]),v._v(" 中有参数，所以将这个参数作为成功的回调参数的 "),e("code",[v._v("data")]),v._v("。故，输出 "),e("code",[v._v("6")]),v._v("和 "),e("code",[v._v("5")]),v._v("。")]),v._v(" "),e("li",[v._v("当第二轮"),e("strong",[v._v("微任务队列")]),v._v("走完后，再走"),e("strong",[v._v("宏任务队列")]),v._v("，故，第三轮输出："),e("code",[v._v("2")]),v._v("。")])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：做此题的技巧：① 先走完"),e("code",[v._v("同步")]),v._v("、② 再走"),e("code",[v._v("异步")]),v._v("，其中"),e("code",[v._v("异步方法")]),v._v("中先走"),e("code",[v._v("微任务")]),v._v("再走"),e("code",[v._v("宏任务")]),v._v("。")]),v._v(" "),e("h3",{attrs:{id:"题目二"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目二"}},[v._v("#")]),v._v(" 题目二")]),v._v(" "),e("blockquote",[e("p",[v._v("输出一下结果？")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2deqkJNyPjrKZ4KVdfpa.40MS7d*QnTWAVeD9lmpChr6wRrvF0wv3xtrC0Lv8tE4fA!!/b&bo=4gJqBAAAAAADB6w!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("详细的分析一下这题的解题思路：")]),v._v(" "),e("ol",[e("li",[v._v("相信有很多小伙伴由第一道题的经验可知：第一轮输出 "),e("code",[v._v("1")]),v._v(" 和 "),e("code",[v._v("7")]),v._v("。"),e("strong",[v._v("这样输出就错了")]),v._v("！相信如果实现上方小节 "),e("code",[v._v("Promise")]),v._v(" 源码小节都知道，"),e("code",[v._v("Promise")]),v._v(" 参数里的"),e("code",[v._v("执行器")]),v._v("是默认"),e("strong",[v._v("立即执行")]),v._v("的。故，第一轮输出： "),e("code",[v._v("1")]),v._v(" 、"),e("code",[v._v("3")]),v._v("、"),e("code",[v._v("7")]),v._v("。下面分析下执行异步时的情况：")]),v._v(" "),e("li",[v._v("同理，"),e("code",[v._v("2")]),v._v(" 存放到"),e("strong",[v._v("宏任务队列")]),v._v("中。由于执行了 "),e("code",[v._v("resolve(4)")]),v._v("，那么第一个 "),e("code",[v._v(".then")]),v._v("方法的成功回调方法中的打印值会存放在"),e("strong",[v._v("微任务队列")]),v._v("中等待执行。此时，要注意：第二个 "),e("code",[v._v(".then")]),v._v("方法的成功回调不会执行，一直在等待状态。故，第二轮输出："),e("code",[v._v("5")]),v._v("、"),e("code",[v._v("4")]),v._v("。")]),v._v(" "),e("li",[v._v("当第一个 "),e("code",[v._v(".then")]),v._v(" 方法执行完后，再执行第二个 "),e("code",[v._v(".then")]),v._v(" 方法，并且将成功回调方法中的打印值会存放在"),e("strong",[v._v("微任务队列")]),v._v("中等待执行。由于第一个 "),e("code",[v._v("then")]),v._v(" 方法执行没有 "),e("code",[v._v("return")]),v._v(" ，所以第二个 "),e("code",[v._v("then")]),v._v(" 参数 "),e("code",[v._v("data")]),v._v(" 为 "),e("code",[v._v("undefined")]),v._v("。故，第三轮输出："),e("code",[v._v("6")]),v._v(" 和 "),e("code",[v._v("undefined")]),v._v("。")]),v._v(" "),e("li",[v._v("当第三轮"),e("strong",[v._v("微任务队列")]),v._v("走完后，再走"),e("strong",[v._v("宏任务队列")]),v._v("，故，第四轮输出："),e("code",[v._v("2")]),v._v("。")])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：做此题的技巧：同上题技巧。但要明白 "),e("code",[v._v("Promise")]),v._v(" 的特点。")]),v._v(" "),e("h3",{attrs:{id:"题目三"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目三"}},[v._v("#")]),v._v(" 题目三")]),v._v(" "),e("blockquote",[e("p",[v._v("输出一下结果？")])]),v._v(" "),e("p",[e("img",{attrs:{src:"http://m.qpic.cn/psc?/V129bHJB4fgIUn/POwAobJtn54NCYlSXd4O2WMeD92MKfVc1seebPIYjRNllSrJafwLRn2YsoYRjQjEp1pIoXp4trvKWitOYWtDQA!!/b&bo=rgMaBgAAAAADB5M!&rf=viewer_4",alt:""}})]),v._v(" "),e("p",[v._v("详细的分析一下这题的解题思路：")]),v._v(" "),e("ol",[e("li",[v._v("由第二题可知，故，第一轮输出："),e("code",[v._v("1")]),v._v("、"),e("code",[v._v("3")]),v._v("、"),e("code",[v._v("9")]),v._v("、"),e("code",[v._v("11")]),v._v("。下面分析下执行异步时的情况：")]),v._v(" "),e("li",[v._v("同理，"),e("code",[v._v("2")]),v._v(" 存放到"),e("strong",[v._v("宏任务队列")]),v._v("中。第一个 "),e("code",[v._v("Promise")]),v._v(" 执行 "),e("code",[v._v("resolve")]),v._v("方法，所以先执行第一个 "),e("code",[v._v("Promise")]),v._v("中的第一个 "),e("code",[v._v("then")]),v._v("方法。"),e("code",[v._v("4")]),v._v("和 "),e("code",[v._v("5")]),v._v(" 被存放在"),e("strong",[v._v("微任务队列")]),v._v("中。但又 "),e("code",[v._v("new Promise")]),v._v(" 并且执行 "),e("code",[v._v("resolve")]),v._v(" 方法。"),e("strong",[v._v("注意")]),v._v("：此时，第二个 "),e("code",[v._v("resolve")]),v._v(" 执行时，"),e("code",[v._v("6")]),v._v("和"),e("code",[v._v("7")]),v._v("的代码还没有存放在"),e("strong",[v._v("微任务队列")]),v._v("中。第一个"),e("code",[v._v("Promise")]),v._v(" 中的第二个 "),e("code",[v._v("then")]),v._v(" 方法中的 "),e("code",[v._v("8")]),v._v("也没有存放在"),e("strong",[v._v("微任务队列")]),v._v("中。代码执行到三个 "),e("code",[v._v("new Promise")]),v._v(" 中调用 "),e("code",[v._v("resolve")]),v._v("方法，所以 "),e("code",[v._v("10")]),v._v(" 被存在"),e("strong",[v._v("微任务队列")]),v._v("中。故，第二轮输出："),e("code",[v._v("4")]),v._v("、"),e("code",[v._v("5")]),v._v("、"),e("code",[v._v("10")]),v._v("。")]),v._v(" "),e("li",[v._v("执行上述分析的"),e("strong",[v._v("微任务队列")]),v._v("中的 "),e("code",[v._v("10")]),v._v("，当走第二个 "),e("code",[v._v("Promise")]),v._v(" 的 "),e("code",[v._v("resolve")]),v._v(" 方法时，"),e("code",[v._v("6")]),v._v(" 被存放在"),e("strong",[v._v("微任务队列")]),v._v("中，"),e("code",[v._v("7")]),v._v(" 没有存放在"),e("strong",[v._v("微任务队列")]),v._v("中。此时，"),e("code",[v._v("8")]),v._v("被存放在"),e("strong",[v._v("微任务队列")]),v._v("中。故，第三轮输出："),e("code",[v._v("10")]),v._v("、"),e("code",[v._v("6")]),v._v("、"),e("code",[v._v("8")]),v._v("。")]),v._v(" "),e("li",[v._v("最后执行第二个 "),e("code",[v._v("Promise")]),v._v(" 的 第二个 "),e("code",[v._v("then")]),v._v(" 方法。故，第四轮输出："),e("code",[v._v("7")]),v._v("。")]),v._v(" "),e("li",[v._v("当第四轮"),e("strong",[v._v("微任务队列")]),v._v("走完后，再走"),e("strong",[v._v("宏任务队列")]),v._v("，故，第四轮输出："),e("code",[v._v("2")]),v._v("。")])]),v._v(" "),e("p",[e("strong",[v._v("注意")]),v._v("：做此题的技巧：同上题技巧。但要知道Promise的状态是否是成功或者失败状态回调函数是否执行。")]),v._v(" "),e("p",[v._v("通过以上三道有关 "),e("code",[v._v("Promise")]),v._v(" 的题，当你完全掌握了 "),e("code",[v._v("Promise")]),v._v("、"),e("code",[v._v("同步")]),v._v("、"),e("code",[v._v("异步")]),v._v("、"),e("code",[v._v("宏任务")]),v._v("、"),e("code",[v._v("微任务")]),v._v("、"),e("code",[v._v("任务队列")]),v._v("、"),e("code",[v._v("JS执行机制")]),v._v("等相关知识点后，这种题都是可以用眼睛就能做出来。")]),v._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),e("p",[v._v("说实话，Promise 原理实现的代码我差不多写了十遍左右了，每一次写都有不同的感受和体会。希望有需要的小伙伴静下心来自己多摸索着写几篇，当你完完整整的实现过必定对你面试还是个人技术成长有好处。跟我们平时项目需求开发一样，只要思路屡清楚再开始编码，你就会发现原来 Promise 也不是传说中的那么复杂。")])])}),[],!1,null,null,null);_.default=c.exports}}]);