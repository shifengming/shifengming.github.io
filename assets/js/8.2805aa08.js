(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{220:function(e,n,t){"use strict";t.r(n);var a=t(0),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"axios的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#axios的用法"}},[e._v("#")]),e._v(" axios的用法")]),e._v(" "),t("h2",{attrs:{id:"安装axios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装axios"}},[e._v("#")]),e._v(" 安装axios")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install axios -S\n")])])]),t("h2",{attrs:{id:"创建fetch-js文件，封装axios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建fetch-js文件，封装axios"}},[e._v("#")]),e._v(" 创建fetch.js文件，封装axios")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import axios from 'axios';\n\n// 自动切换环境\nif(process.env.NODE_ENV == 'development') {\n    axios.defaults.baseURL = '/sso';//  本地开发环境\n} else if(process.env.NODE_ENV == 'debug') {\n    axios.defaults.baseURL = '/sso';  // 本地调试环境\n} else if(process.env.NODE_ENV == 'production') {\n    axios.defaults.baseURL = localStorage.getItem('domain'); // 线上环境\n}\naxios.defaults.baseURL ='https://api.apiopen.top'\n// 设置超时时间\naxios.defaults.timeout = 10000;\n\n// 设置请求头\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded';\n// axios.defaults.withCredentials=true; // 允许跨域\n\n// 对外请求接口 ===》export导出request方法\nexport default function request({method, url, params}) {\n    if(method == 'GET') {\n        return get(url, params)\n    } else if(method == 'POST') {\n        return post(url, params)\n    }\n}\n\n// 封装对内的get请求\nfunction get(url, params) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, params).then(res => {\n            resolve(res.data)\n        }).catch(err => {\n            reject(err)\n        })\n    })\n}\n\n// 封装对内的post请求\nfunction post(url, params) {\n    return new Promise((resolve, reject) => {\n        axios.post(url, JSON.stringify(params)).then(res => {\n            resolve(res.data)\n        }).catch(err => {\n            reject(err)\n        })\n    })\n}\n\n// 请求拦截（请求发出前处理请求）\naxios.interceptors.request.use(\n    config => {\n        if(localStorage.getItem('sessionId')) {\n            config.headers.sessionId = localStorage.getItem('sessionId')\n        }\n        return config\n    },\n    error => {\n        return Promise.error(error)\n    }\n)\n\n// 响应拦截器（处理响应数据）\naxios.interceptors.response.use(\n    response =>{\n        if(response.status == 200) {\n            return Promise.resolve(response)\n        } else {\n            return Promise.reject(response)\n        }\n    },\n    error => {\n        return Promise.reject(error.response)\n    }\n)\n")])])]),t("h2",{attrs:{id:"创建api-js用于存放后台所有接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建api-js用于存放后台所有接口"}},[e._v("#")]),e._v(" 创建api.js用于存放后台所有接口")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 我们以登录接口为例：\nimport request from './fetch.js'; // 导入刚才封装的请求\n\nexport function login(params) {\n\treturn request({\n\t\tmethod: 'GET',\n\t\turl: 'getJoke',\n\t\tparams: params\n\t})\n}\n")])])]),t("h2",{attrs:{id:"在app-vue里面使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在app-vue里面使用"}},[e._v("#")]),e._v(" 在app.vue里面使用")]),e._v(" "),t("p",[e._v("当然也可以在别的位置使用，可能会涉及父子组件传递的问题")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<template>\n  <div id="app">\n    <img alt="Vue logo" src="./assets/logo.png">\n    <Login msg="Welcome to Your Vue.js App"/>\n    <button>登录</button>\n    \n    <el-table :data="list" border stripe>\n      <el-table-column type="index"></el-table-column>\n      <el-table-column label="姓名" prop="name"></el-table-column>\n      <el-table-column label="时间" prop="passtime"></el-table-column>\n      <el-table-column label="序号" prop="sid"></el-table-column>\n      <el-table-column label="内容" prop="text"></el-table-column>\n      <el-table-column label="时间" prop="passtime"></el-table-column>\n   </el-table>\n\n  </div>\n</template>\n\n<script>\nimport Login from \'./components/Login.vue\'\nimport { login } from \'./components/api\'; // 导入刚才login方法\n\nexport default {\n    data(){\n      return{\n        list:[]\n      }\n  },\n   created() {\n       this.login()\n   },\n  // name: \'App\',\n methods: {\n      login() {\n        this.name = []  // 初始化数据\n        login({\n              page: 1,\n              count: 2,\n              type: \'video\'\n        }).then(res => {\n                console.log(res)\n                if (res.code == 200) {\n                  this.list = res.result;\n                } else {\n                  console.log(\'暂无该项数据\')\n                }\n        })\n    }\n  },\n  components: {\n    Login\n  }\n}\n<\/script>\n\n<style lang="less">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n')])])]),t("p",[t("img",{attrs:{src:"https://wx4.sinaimg.cn/mw690/0066LWykgy1ge9ajyydhbj30u705tjrr.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://wx4.sinaimg.cn/mw690/0066LWykgy1ge9ajyst7yj30ng08xgmq.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://wx2.sinaimg.cn/mw1024/0066LWykgy1ge9ajyt2xbj30jb0840tb.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://wx2.sinaimg.cn/large/0066LWykgy1ge9ajyskr1j30iq0cy75h.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"通过v-for渲染到页面上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过v-for渲染到页面上"}},[e._v("#")]),e._v(" 通过v-for渲染到页面上")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://wx1.sinaimg.cn/large/0066LWykgy1ge9ajysf7ij30n308qq3x.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://wx1.sinaimg.cn/large/0066LWykgy1ge9ajyt4ohj30zw0ib764.jpg",alt:""}})]),e._v(" "),t("p",[e._v("如果页面有id的值，key值也可以写成item.id")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://wx3.sinaimg.cn/large/0066LWykgy1ge9ajyrhwbj309y03mt8n.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"在login-vue里面调接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在login-vue里面调接口"}},[e._v("#")]),e._v(" 在login.vue里面调接口")]),e._v(" "),t("p",[e._v("其实这个掉接口的方法和app.vue里面掉接口的方法差不多")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<template>\n  <div>\n  </div>\n</template>\n\n<script>\nimport { login } from './api'; // 导入刚才login方法\n\nexport default {\n  data(){\n    return{\n      list:[]\n    }\n  },\n   created() {\n       this.login()\n   },\n  methods: {\n      login() {\n        this.name = []  // 初始化数据\n        login({\n                page: 1,\n                count: 2,\n                type: 'video'\n        }).then(res => {\n                console.log(res)\n                if (res.code == 200) {\n                  this.list = res.result;\n                } else {\n                  console.log('暂无该项数据')\n              }\n        })\n    }\n  }\n}\n<\/script>\n<style>\n</style>\n")])])]),t("p",[t("img",{attrs:{src:"https://wx3.sinaimg.cn/large/0066LWykgy1ge9ajyyl3lj31080isq4v.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"设置跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置跨域"}},[e._v("#")]),e._v(" 设置跨域")]),e._v(" "),t("p",[e._v("注意：一般接口都是不允许跨域访问的，我们需要在webpack配置文件中设置跨域")]),e._v(" "),t("p",[e._v("在config/index.js里加入：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("proxyTable: {\n      '/sso': {\n        target: 'http://192.168.0.225:22100',  // 通过本地服务器将你的请求转发到这个地址\n        changeOrigin: true,  // 设置这个参数可以避免跨域\n        pathRewrite: {\n          '^/sso': '/sso'\n        }\n      }\n    },\n")])])]),t("h2",{attrs:{id:"实现页面跳转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现页面跳转"}},[e._v("#")]),e._v(" 实现页面跳转")]),e._v(" "),t("h3",{attrs:{id:"query传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#query传参"}},[e._v("#")]),e._v(" query传参")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('     //Login.vue\n     <ul :data="list">\n      <li v-for="item in list" :key="item.id" @click="jump(item)">\n          <div>{{item.name}}</div>\n          <div>{{item.sid}}</div>\n      </li>\n    </ul>  \n    \n    \n   //要把item的值传入下边才可以用，(这个jump是我定义的一个点击方法在上边写的)\n   jump(item){\n      console.log(item)\n      this.$router.push({\n        query:{\n          obj: item.name\n        }\n      })\n    }\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//content.vue\n<template>\n    <div>\n        111\n        <span v-for="item in con" :key="item.id">{{item.name}}</span>\n    </div>\n</template>\n<script>\n    export default{\n        props: [\'con\'],\n        created() {\n            console.log(this.$route.query)\n            console.log(this.$route)\n            console.log(this.$router)\n        }\n    }\n<\/script>\n')])])]),t("p",[t("img",{attrs:{src:"https://wx4.sinaimg.cn/large/0066LWykgy1ge9ajz026bj30q80amwez.jpg",alt:""}})]),e._v(" "),t("h3",{attrs:{id:"params传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params传参"}},[e._v("#")]),e._v(" params传参")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//Login.vue\n    <ul :data="list">\n      <li v-for="item in list" :key="item.id" @click="jump(item)">\n          <div>{{item.name}}</div>\n          <div>{{item.sid}}</div>\n      </li>\n      \n      \n   jump(item){\n      console.log(item)\n      this.$router.push({\n        // path: "./content",\n        name: "content",\n        // query:{\n        //   obj: item.name\n        // },\n        params:{\n           name: item.name\n        }\n      })\n    }\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//content.vue\n<template>\n    <div>\n        111\n        <span v-for="item in con" :key="item.id">{{item.name}}</span>\n        \x3c!-- <el-table-column label="姓名" prop="name"></el-table-column> --\x3e\n    </div>\n</template>\n<script>\n    export default{\n        props: [\'con\'],\n        created() {\n            console.log(this.$route.params.name)\n            console.log(this.$route)\n            console.log(this.$router)\n        }\n    }\n<\/script>\n<style>\n\n</style>\n')])])]),t("p",[t("img",{attrs:{src:"https://wx2.sinaimg.cn/large/0066LWykgy1ge9ajyyjnsj30qz0angm3.jpg",alt:""}})]),e._v(" "),t("h3",{attrs:{id:"params和query传参的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params和query传参的区别"}},[e._v("#")]),e._v(" params和query传参的区别")]),e._v(" "),t("ul",[t("li",[e._v("query方式的参数会在地址栏后显示出来")]),e._v(" "),t("li",[e._v("params方式的参数不会在地址栏后显示出来")]),e._v(" "),t("li",[e._v("query可以用name或path来引入")]),e._v(" "),t("li",[e._v("params必需要用name来引入")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("接收参数都是类似的，分别是:this.$route.query.name和this.$route.params.name\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);