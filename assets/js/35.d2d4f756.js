(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{210:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"深入解读es6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深入解读es6"}},[t._v("#")]),t._v(" 深入解读es6")]),t._v(" "),s("h2",{attrs:{id:"es6和js的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6和js的区别"}},[t._v("#")]),t._v(" ES6和JS的区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ES6是标准")])]),t._v(" "),s("li",[s("p",[t._v("JS 是实现")])])]),t._v(" "),s("h2",{attrs:{id:"es6的历史版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6的历史版本"}},[t._v("#")]),t._v(" ES6的历史版本")]),t._v(" "),s("ul",[s("li",[t._v("1996, ES1.0 Netscape 将 JS 提交给 ECMA 组织，ES 正式出现")]),t._v(" "),s("li",[t._v("1999, ES3.0 被广泛支持")]),t._v(" "),s("li",[t._v("2011, ES5.1 成为 ISO 国际标准")]),t._v(" "),s("li",[t._v("2015, ES6.0 正式发布")])]),t._v(" "),s("h2",{attrs:{id:"es6兼容性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6兼容性"}},[t._v("#")]),t._v(" ES6兼容性")]),t._v(" "),s("p",[t._v("ES6(ES2015) 支持的环境 IE10+, Chrome, FireFox, 移动端, NodeJS")]),t._v(" "),s("p",[t._v("解决不兼容办法，编译、转换")]),t._v(" "),s("ul",[s("li",[t._v("在线转换")]),t._v(" "),s("li",[t._v("或者提前编译")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let a=20;\nlet b=5;\nalert(a+b);\n")])])]),s("p",[s("a",{attrs:{href:"https://www.babeljs.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel 中文网"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/babel.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel 入门教程 阮一峰"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Babel 是一个 JavaScript 编译器")]),t._v(" "),s("li",[t._v("一个广泛使用的转码器，可以将ES6代码转为ES5代码，从而在现有环境执行")])]),t._v(" "),s("h2",{attrs:{id:"var、let、const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var、let、const"}},[t._v("#")]),t._v(" var、let、const")]),t._v(" "),s("h3",{attrs:{id:"var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),s("ul",[s("li",[t._v("可以重复声明")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var a=12\nvar a=6\nalert(a); //可以出来结果，不报错，出来的结果为6\n")])])]),s("ul",[s("li",[t._v("无法限制修改")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("PI=3.1415926  //这个都是无法限制修改的\n")])])]),s("ul",[s("li",[t._v("没有块级作用域")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("if(true){\n\tvar a=12\n}\nalert(a);//出来的结果是12\n")])])]),s("h3",{attrs:{id:"let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),s("ul",[s("li",[t._v("不能重复声明")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let a=5\nlet a=10\nalert(a);//这时候就会出现报错，因为相同的变量不能声明两次\n")])])]),s("ul",[s("li",[t._v("可以修改")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//let是定义变量，可以修改\nlet a=12\na=20\nalert(a)//打印出来的结果a=20\n")])])]),s("ul",[s("li",[t._v("有块级作用域")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("if(true){\n\tlet a=12;\n}\nalert(a);//这个时候就会出现报错，说a没有定义\n")])])]),s("h3",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),s("ul",[s("li",[t._v("不能重复声明")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const a=5\nconst a=10\nalert(a);//这时候就会出现报错，因为相同的变量不能声明两次\n")])])]),s("ul",[s("li",[t._v("不能修改")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//const是定义的常量，不能修改\nconst a=12;\na=5;\nalert(a);//这时候就会出现报错，不能修改\n")])])]),s("ul",[s("li",[t._v("有块级作用域")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("if(true){\n\tconst a=12;\n}\nalert(a);//这个时候就会出现报错，说a没有定义\n")])])]),s("h2",{attrs:{id:"块级作用域有什么用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域有什么用"}},[t._v("#")]),t._v(" 块级作用域有什么用")]),t._v(" "),s("h3",{attrs:{id:"var案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var案例"}},[t._v("#")]),t._v(" var案例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script>\n\twindow.onload=function(){\n\t\tvar aBtn=document.getElementsByTagName(\'input\')\n\t\tfor(var i=0;i<aBtn.length;i++){\n\t\t\taBtn[i].onclick=function(){\n\t\t\t\talert(i);\n\t\t\t}\n\t\t}\n\t}\n<\/script>\n</head>\n<body>\n\t<input type="button" value="星期一">\n\t<input type="button" value="星期二">\n\t<input type="button" value="星期三">\n</body>\n')])])]),s("p",[t._v("打印出来的结果就是点击3个按钮，都弹出3，这说明了var没有块级作用域")]),t._v(" "),s("p",[t._v("所以这下边这段代码就进行了修改，打印出来三个按钮就是0、1、2")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script>\n\twindow.onload=function(){\n\t\tvar aBtn=document.getElementsByTagName(\'input\')\n\t\tfor(let i=0;i<aBtn.length;i++){\n\t\t\t(function(i){\n\t\t\t\taBtn[i].onclick=function(){\n\t\t\t\talert(i);\n\t\t\t};\n\t\t\t})(i)\n\t\t}\n\t}\n<\/script>\n</head>\n<body>\n\t<input type="button" value="星期一">\n\t<input type="button" value="星期二">\n\t<input type="button" value="星期三">\n</body>\n')])])]),s("h3",{attrs:{id:"let实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let实例"}},[t._v("#")]),t._v(" let实例")]),t._v(" "),s("p",[t._v("所以直接使用let就可以解决上边的问题，使三个按钮弹出的结果为0、1、2")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script>\n\twindow.onload=function(){\n\t\tvar aBtn=document.getElementsByTagName(\'input\')\n\t\tfor(let i=0;i<aBtn.length;i++){\n\t\t\taBtn[i].onclick=function(){\n\t\t\t\talert(i);\n\t\t\t}\n\t\t}\n\t}\n<\/script>\n</head>\n<body>\n\t<input type="button" value="星期一">\n\t<input type="button" value="星期二">\n\t<input type="button" value="星期三">\n</body>\n')])])]),s("h2",{attrs:{id:"箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),s("ul",[s("li",[t._v("如果只有一个参数，（）可以省")]),t._v(" "),s("li",[t._v("如果只有一个return，{ }可以省略")])]),t._v(" "),s("h3",{attrs:{id:"普通函数和箭头函数写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通函数和箭头函数写法"}},[t._v("#")]),t._v(" 普通函数和箭头函数写法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//普通函数1\nfunction show(){\n\t\n}\n//箭头函数1\nlet show=()=>{\n\t\n}\n//普通函数2\nfunction(){\n\t\n}\n//箭头函数2\n()=>{\n\t\n}\n\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//普通函数\nwindow.onload=function(){\n\t\talert('abc')\n\t}\n//箭头函数\t\nwindow.onload=()=>{\n    alert('abc')\n  }\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t//普通函数\n\tlet show=function(){\n\t\talert('abc')\n\t};\n\tshow();\n\t//箭头函数\n    let show=()=>{\n   \t\t alert('123')\n\t}\n\tshow();\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t//普通函数\n\tlet show=function(a,b){\n\t\talert(a+b);\n\t}\n\tshow(23,9)\n\t//箭头函数\n    let show=()=>{\n   \t  alert(23+9)\n\t}\n\tshow(23+9)\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//普通函数\nlet arr = [12,8,7,99,14,26];\n\t\tarr.sort(function(n1,n2){\n\t\t\treturn n1-n2\n\t\t})\n\talert(arr)\n//箭头函数\n\tlet arr = [12,8,7,99,14,26];\n\t\tarr.sort=(n1,n2)=>{\n\t\t\treturn n1-n2\n\t\t}\n\talert(arr)\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t//普通函数\n\tlet show=function(a){\n\t\treturn a*2\n\t}\n\talert(show(23))\n\t//箭头函数\n    let show=(a)=>{\n        return a*2\n    }\n    alert(show(12))\n")])])]),s("h2",{attrs:{id:"函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[t._v("#")]),t._v(" 函数的参数")]),t._v(" "),s("ul",[s("li",[t._v("参数的扩展/展开")]),t._v(" "),s("li",[t._v("默认参数")])]),t._v(" "),s("h3",{attrs:{id:"参数扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数扩展"}},[t._v("#")]),t._v(" 参数扩展")]),t._v(" "),s("ul",[s("li",[t._v("收集剩余的参数")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tfunction show(a,b,...args){\n\t\talert(args)\n\t}\n\tshow(12,12,34,3,2,4,28)//打印出来的结果是34,3,2,4,28   (...args必须放在最后面)\n")])])]),s("ul",[s("li",[s("p",[t._v("展开数组")]),t._v(" "),s("p",[t._v("展开后的效果，跟直接把数组的内容写在这儿一样")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t//普通函数\n\tfunction show(a,b,c){\n\t\talert(a);\n\t\talert(b);\n\t\talert(c)\n\t}\n\tshow(1,2,3)//打印出来的结果弹出1,再弹出2，再弹出3\n\t\n\t//数组展开\n\tlet arr1=[1,2,3]\n\tlet arr2=[5,6,7]\n\tlet arr=[...arr1,...arr2];\n\talert(arr)\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tfunction show(...args){\n\t\tfn(...args);\n\t}\n\tfunction fn(a,b){\n\t\talert(a+b)\n\t}\n\tshow(12,5)//弹出17\n")])])]),s("h3",{attrs:{id:"默认参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认参数"}},[t._v("#")]),t._v(" 默认参数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$('#div1').animate({width:'200px'});\n$('#div1').animate({width:'200px'},1000);\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tfunction show(a,b=5,c=12){\n\t\tconsole.log(a,b,c)\n\t}\n\tshow(99)//99 5 12(默认参数就是直接把值替换成没有定义值的)\n")])])]),s("h2",{attrs:{id:"解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[t._v("#")]),t._v(" 解构赋值")]),t._v(" "),s("ul",[s("li",[t._v("左右两边结果必须一样")]),t._v(" "),s("li",[t._v("右边必须是个东西")]),t._v(" "),s("li",[t._v("声明和赋值不能分开(必须在一句话完成)")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t//普通赋值\n\tlet arr=[1,2,3]\n\tlet a=arr[0]\n\tlet b=arr[1]\n\tlet c=arr[2]\n\tconsole.log(a,b,c)//1,2,3\n\t\n\t//获取数组中的值\n    let[a,b,c]=[1,2,3]\n    console.log(a,b,c)//1,2,3\n    \n    //获取对象中的值\n    let {a,c,d}={a:12,c:5,d:6}\n    console.log(a,c,d)\n    \n    //复杂解构\n    let [{a,b},[n1,n2,n3],num,str]=[{a:12,b:4},[2,3,6],787,'abcdes']\n    console.log(a,b,n1,n2,n3,num,str)\n    \n    //复杂解构\n    let [json,arr,num,str]=[{a:12,b:4},[2,3,6],787,'abcdes']\n    console.log(json,arr,num,str)\n    \n    //获取数组中的值\n    let [a,b]=[123,23]\n    console.log(a,b)//123 23\n")])])]),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" map")]),t._v(" "),s("p",[t._v("中文可以叫映射(一个对一个，比如给10个返回出来还是10个)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//例子1\n[12,34,33,32,90,87,89]\n[不及格,不及格,不及格,不及格,及格,及格,及格]\n\n//例子2\n[45,78,278,890]\n[\n    {name:'one',level:0,role:9},\n    {name:'two',level:0,role:8},\n    {name:'three',level:0,role:7},\n    {name:'four',level:0,role:6},\n]\n\n//例子3\nlet arr=[12,5,8];\n    let result = arr.map((item)=>{\n    return item*2;\n    })\nalert(result)//24,10,16\n\n//例子4\nlet arr=[12,5,8];\nlet result = arr.map(item=>item*2);\nalert(result)//24,10,16\n\n//例子5\nlet score=[89,12,34,23,45,55];\nlet result =score.map(item=>item>60?'及格':'不及格');\nalert(score);//89,12,34,23,45,55\nalert(result);//及格,不及格,不及格,不及格,不及格,不及格\n")])])]),s("h3",{attrs:{id:"reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reduce"}},[t._v("#")]),t._v(" reduce")]),t._v(" "),s("p",[t._v("中文可以叫汇总(一堆出来一个，算个总数)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//算总数\n[12,800000000,8998788789]=> 908989089\n//算平均数\n[12,59,99]=>56.67\n\n//例子1，算总和\nlet score=[89,12,34,23,45,55];\nlet result = score.reduce(function(tmp,item,index){\nreturn tmp+item;\n})\nalert(result)//258(把这几个数加起来的总和)\n\n//例子2,算平均数\nlet score=[89,12,34,23,45,55];\nlet result = score.reduce(function(tmp,item,index){\nreturn tmp+item;\n})\nalert(result/score.length)//43(把这几个数求平均数)\n\n//例子3\nlet arr=[12,67,67,889,97];\nlet result=arr.reduce(function(tmp,item,index){\n\tif(index!=this.length-1){//不是最后一次\n\t\treturn tmp+item;\n\t}else{//最后一次\n\t\treturn(tmp+item)\n\t}\n})\nalert(result);//1132\n")])])]),s("h3",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" filter")]),t._v(" "),s("p",[t._v("中文可以叫过滤器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//例子1\nlet arr=[12,5,8,99,67,87];\nlet result=arr.filter(item=>{\n\tif(item%3==0){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n});\nalert(result);//12,99,87\n\n//例子2\nlet arr=[12,5,8,99,67,87];\nlet result=arr.filter(item=>{\n\talert(item%3==0);\n});//弹出布尔值\n\n//例子3\nlet arr=[\n\t{title:'外套',price:90},\n\t{title:'毛衣',price:78},\n\t{title:'睡衣',price:95558},\n\t{title:'裤子',price:87},\n]\nlet result=arr.filter(json=>json.price>=10000)\nconsole.log(result);//0: {title: \"睡衣\", price: 95558}\n")])])]),s("h3",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[t._v("#")]),t._v(" forEach")]),t._v(" "),s("p",[t._v("中文可以叫循环(迭代)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let arr=[12,3,45,6,566];\narr.forEach((item,index)=>{\n\talert(index+':'+item)//0:12  1:3  2:45  3:6  4:566\n})\n")])])]),s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("多写两个新方法")]),t._v(" "),s("p",[t._v("startsWith")]),t._v(" "),s("p",[t._v("endsWith")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//方法1：startWith\nlet str='git://www.baidu.com/23448';\nif(str.startsWith('http://')){\n\talert('普通地址');\n}else if(str.startsWith('https://')){\n\talert('加密地址');\n}else if(str.startsWith('git://')){\n\talert('git地址');\n}else{\n\talert('其它');\n}//git地址\n\n//方法2：endsWith\nlet str='1.jpg';\nif(str.endsWith('.txt')){\n\talert('文件文本');\n}else if(str.endsWith('.jpg')){\n\talert('JPG图片');\n}else{\n\talert('其它')\n}//JPG图片\n")])])]),s("ul",[s("li",[s("p",[t._v("字符串模板")]),t._v(" "),s("p",[t._v("字符串连接(直接把东西塞到字符串里面  ${东西}   可以折行)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//例子1\nlet a =12;\nlet str = `a${a}bc`;\nalert(str)//a12bc\n\n//例子2\nlet title='标题';\nlet content='内容';\nlet str='<div>\\\n\t<h1>'+title+'</h1>\\\n\t<p>'+content+'</p>\\\n  </div>';\n  console.log(str)\n\nlet str2=`<div>\n\t<h1>${title}</h1>\n\t<p>${content}</p>\n\t<div>`\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"面向对象基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象基础"}},[t._v("#")]),t._v(" 面向对象基础")]),t._v(" "),s("ul",[s("li",[t._v("class关键字，构造器和类分开了")]),t._v(" "),s("li",[t._v("class里面直接加方法")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//面向对象方法1 \nfunction User(name,pass){\n\tthis.name=name;\n\tthis.pass=pass;\n}\nUser.prototype.showName=function(){\n\talert(this.name)//xiaoming\n}\nUser.prototype.showPass=function(){\n\talert(this.pass)//123456\n}\nvar ul=new User('xiaoming','123456');\nul.showName();\nul.showPass();\n\n//面向对象方法2\nclass User{\n\tconstructor(name,pass){\n\t\tthis.name=name;\n\t\tthis.pass=pass;\n\t}\n\tshowName(){\n\t\talert(this.name)//xiaoming\n\t}\n\tshowPass(){\n\t\talert(this.pass)//123456\n\t}\n}\nvar ul=new User('xiaoming','123456');\nul.showName();\nul.showPass();\n")])])]),s("p",[t._v("面向对象的继承")]),t._v(" "),s("p",[t._v("super-超类==父亲")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("class VipUser extends User{\n\tconstructor(name,pass,level){\n\t\tsuper(name,pass);\n\t\tthis.level=level;\n\t}\n\tshowLevel(){\n\t\talert(this.level)\n\t}\n}\nvar v1=new VipUser('xaioming','123456',3)\nv1.showName();//xaioming\nv1.showPass();//123456\nv1.showLevel();//3\n")])])]),s("h2",{attrs:{id:"面向对象实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象实例"}},[t._v("#")]),t._v(" 面向对象实例")]),t._v(" "),s("p",[t._v("面向对象应用—React")]),t._v(" "),s("ul",[s("li",[t._v("组件化-class")]),t._v(" "),s("li",[t._v("JSX")])]),t._v(" "),s("p",[t._v("JSX==babel==browser.js")]),t._v(" "),s("h2",{attrs:{id:"json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[t._v("#")]),t._v(" JSON")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("JSON对象")]),t._v(" "),s("p",[t._v("JSON.stringify")]),t._v(" "),s("p",[t._v("JSON.parse")])]),t._v(" "),s("li",[s("p",[t._v("简写(名字一样，方法也可以简写，留一个就行)")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("show:function(){...}//以前是这种方法\nshow(){...}//现在是这种方法\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let json={a:12,b:5};\nlet str="http://baidu.com"+encodeURIComponent(JSON.stringify(json))\nalert(str)//http://baidu.com%7B%22a%22%3A12%2C%22b%22%3A5%7D\n')])])]),s("p",[t._v("json的标准写法")]),t._v(" "),s("ul",[s("li",[t._v("只能用双引号")]),t._v(" "),s("li",[t._v("所有的名字都必须用引号包起来")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{a:12,b:5}  //这个是错的\n{"a":12,"b":5}   //这个是对的\n')])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{a:'abc',b:5}  //这个是错的\n{\"a\":'abc',\"b\":5}\t//这个是对的\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//json的简写\nlet a=12;\nlet b=5;\nlet json={a,b,c:54};\nconsole.log(json)//a: 12  b: 5  c: 54\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let json={\n\ta:12,\n\tshow(){\n\t\talert(this.a);//12\n\t}\n}\njson.show();\n")])])]),s("h2",{attrs:{id:"promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),s("p",[t._v("中文意思承诺")]),t._v(" "),s("h3",{attrs:{id:"异步和同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步和同步"}},[t._v("#")]),t._v(" 异步和同步")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异步：操作之间没啥关系，同时进行多个操作（代码更复杂）")])]),t._v(" "),s("li",[s("p",[t._v("同步：同时只能做一件事（代码简单）")])])]),t._v(" "),s("h3",{attrs:{id:"promise-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-对象"}},[t._v("#")]),t._v(" Promise 对象")]),t._v(" "),s("ul",[s("li",[t._v("用同步的方式来书写异步代码")]),t._v(" "),s("li",[t._v("Promise 让异步操作写起来，像在写同步操作的流程，不必一层层地嵌套回调函数")]),t._v(" "),s("li",[t._v("改善了可读性，对于多层嵌套的回调函数很方便")]),t._v(" "),s("li",[t._v("充当异步操作与回调函数之间的中介，使得异步操作具备同步操作的接口")])]),t._v(" "),s("h3",{attrs:{id:"promise-也是一个构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-也是一个构造函数"}},[t._v("#")]),t._v(" Promise 也是一个构造函数")]),t._v(" "),s("ul",[s("li",[t._v("接受一个回调函数f1作为参数，f1里面是异步操作的代码")]),t._v(" "),s("li",[t._v("返回的p1就是一个 Promise 实例")]),t._v(" "),s("li",[t._v("所有异步任务都返回一个 Promise 实例")]),t._v(" "),s("li",[t._v("Promise 实例有一个then方法，用来指定下一步的回调函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步代码...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f1的异步操作执行完成，就会执行f2。")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Promise 使得异步流程可以写成同步流程")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传统写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("step1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("step2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("step3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("step4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Promise 的写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Promise.all(promiseArray)方法\n"),s("ul",[s("li",[t._v("将多个Promise对象实例包装，生成并返回一个新的Promise实例")]),t._v(" "),s("li",[t._v("promise数组中所有的promise实例都变为resolve的时候，该方法才会返回")]),t._v(" "),s("li",[t._v("并将所有结果传递results数组中")]),t._v(" "),s("li",[t._v("promise数组中任何一个promise为reject的话，则整个Promise.all调用会立即终止，并返回一个reject的新的promise对象")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    p2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    p3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nPromise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("results")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("results"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Promise.race([p1, p2, p3])\n"),s("ul",[s("li",[t._v("Promse.race就是赛跑的意思")]),t._v(" "),s("li",[t._v("哪个结果获得的快，就返回那个结果")]),t._v(" "),s("li",[t._v("不管结果本身是成功状态还是失败状态")])])])]),t._v(" "),s("h2",{attrs:{id:"generator认识生成器函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator认识生成器函数"}},[t._v("#")]),t._v(" generator认识生成器函数")]),t._v(" "),s("h3",{attrs:{id:"generator-生成器函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator-生成器函数"}},[t._v("#")]),t._v(" generator 生成器函数")]),t._v(" "),s("ul",[s("li",[t._v("普通函数，一路到底")]),t._v(" "),s("li",[t._v("generator函数，中间可以停，到哪停呢，用 yield 配合，交出执行权")]),t._v(" "),s("li",[t._v("yield 有 放弃、退让、退位的意思")]),t._v(" "),s("li",[t._v("需要调用next()方法启动执行，需要遇到 yield 停, 踹一脚走一步")]),t._v(" "),s("li",[t._v("generator函数前面加一个 "),s("code",[t._v("*")]),t._v(" 两边可以有空格，或靠近函数或"),s("code",[t._v("function")])]),t._v(" "),s("li",[t._v("背后实际生成多个小函数，实现走走停停")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" // 普通函数\nfunction show() {\n    console.log('a')\n    console.log('b')\n}\nshow()\n\n//generator生成器函数\nfunction *show2() {\n    console.log('1')\n    yield\n    console.log('2')\n}\nlet genObj = show2()\ngenObj.next() // 1\ngenObj.next() // 2\ngenObj.next() // 最后了，没有结果\n")])])]),s("h2",{attrs:{id:"generator-yield是个啥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator-yield是个啥"}},[t._v("#")]),t._v(" generator-yield是个啥")]),t._v(" "),s("h3",{attrs:{id:"yield"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yield"}},[t._v("#")]),t._v(" yield")]),t._v(" "),s("ul",[s("li",[t._v("既可传参，又可以返回")]),t._v(" "),s("li",[t._v("第一个"),s("code",[t._v("next()")]),t._v("传参无效，只用来启动")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//例子1\n//yield可以传参\nfunction *show(){\n\talert('a');//a\n\tlet a=yield;\n\talert('b');//b\n\talert(a)//5\n}\nlet gen=show();\ngen.next(12);\ngen.next(5);\n\n//例子2\nfunction *show(num1,num2){\n\talert(`${num1},${num2}`);//99,89\n\talert('a');//a\n\tlet a=yield;\n\talert('b');//b\n\talert(a)//45\n}\nlet gen=show(99,89);\ngen.next(12);//没法给yield传参\ngen.next(45)\n\n//例子3  yield返回\nfunction *show(){\n\talert('a');\n\tyield 12;\n\talert('b');\n\treturn 55;\n}\nlet gen=show();\nlet res1=gen.next();\nconsole.log(res1);//{value:12,done:false}\nlet res2=gen.next()\nconsole.log(res2);//{value:55,done:true}    最后一步的结果靠return\n")])])]),s("h2",{attrs:{id:"generator实例-runner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator实例-runner"}},[t._v("#")]),t._v(" generator实例-runner")]),t._v(" "),s("h3",{attrs:{id:"异步操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步操作"}},[t._v("#")]),t._v(" 异步操作")]),t._v(" "),s("ul",[s("li",[t._v("回调")]),t._v(" "),s("li",[t._v("Promise 适合一次读一组")]),t._v(" "),s("li",[t._v("generator 适合逻辑性的")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 带逻辑-generator\nrunner(function * () {\n    let userData = yield $.ajax({url: 'getUserData'})\n\n    if (userData.type == 'VIP') {\n        let items = yield $.ajax({url: 'getVIPItems'})\n    } else {\n        let items = yield $.ajax({url: 'getItems'})\n    }\n})\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// yield 实例，用同步方式写异步\nserver.use(function * () {\n    let data = yield db.query(`select * from user_table`)\n    this.body = data\n})\n")])])]),s("h2",{attrs:{id:"generator实例-koa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator实例-koa"}},[t._v("#")]),t._v(" generator实例-KOA")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const koa=require('koa');\nconst mysql=require('koa-mysql');\nlet db=mysql.createPool({host:'localhost',user:'root',password:'123456',database:'23'})\nlet server=new koa();\nserver.use(function *(){\n\tlet data=yield db.query('SELECT * FROM user_table');\n\tthis.body=data;\n})\nserver.listen(8080)\n")])])]),s("h2",{attrs:{id:"es6总结复习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6总结复习"}},[t._v("#")]),t._v(" ES6总结复习")]),t._v(" "),s("h3",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("p",[t._v("var  重复声明、函数级")]),t._v(" "),s("p",[t._v("let  不能重复声明、块级、变量")]),t._v(" "),s("p",[t._v("const  不能重复声明、块级、常量")]),t._v(" "),s("h3",{attrs:{id:"箭头函数-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数-2"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),s("p",[t._v("方便")]),t._v(" "),s("ul",[s("li",[t._v("如果只有一个参数，()可以省")]),t._v(" "),s("li",[t._v("如果只有一个return，{}也可以省")])]),t._v(" "),s("p",[t._v("修正this")]),t._v(" "),s("ul",[s("li",[t._v("this是相对正常点")])]),t._v(" "),s("h3",{attrs:{id:"参数扩展-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数扩展-2"}},[t._v("#")]),t._v(" 参数扩展")]),t._v(" "),s("p",[t._v("能收集，能扩展")]),t._v(" "),s("h3",{attrs:{id:"数组方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组方法"}},[t._v("#")]),t._v(" 数组方法")]),t._v(" "),s("ul",[s("li",[t._v("map 映射")]),t._v(" "),s("li",[t._v("reduce 汇总，一堆->一个")]),t._v(" "),s("li",[t._v("filter 过滤")]),t._v(" "),s("li",[t._v("forEach 循环迭代")])]),t._v(" "),s("h3",{attrs:{id:"字符串-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串-2"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("startsWith/endsWith")])]),t._v(" "),s("li",[s("p",[t._v("字符串模板："),s("code",[t._v("${a}xxx${b}")])])])]),t._v(" "),s("h3",{attrs:{id:"promise-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-2"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),s("p",[t._v("封装异步的操作")]),t._v(" "),s("p",[t._v("Promise.all([]);")]),t._v(" "),s("h3",{attrs:{id:"generator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[t._v("#")]),t._v(" generator")]),t._v(" "),s("p",[t._v("执行到一半能暂停的函数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function *show(){\n\tyield\n}\n")])])]),s("h3",{attrs:{id:"json-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-2"}},[t._v("#")]),t._v(" JSON")]),t._v(" "),s("ul",[s("li",[t._v('JSON.stringify({a:12,b:5}) => \'{"a": 12, "b": 5}\'')]),t._v(" "),s("li",[t._v('JSON.parse(\'{"a":12,"b":5}\')=>{a:12,b:5}')])]),t._v(" "),s("h3",{attrs:{id:"面向对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//类的基本写法\nclass Test{\n\tconstructor(){\n\t\tthis.xx\n\t}\n\t方法1(){\n\t\n\t}\n\t方法2(){\n\t\n\t}\n}\n\n//类的继承写法\nclass Cls2 extends Cls1{\n\tconstructor(){\n\t\tsuper();\n\t}\n}\n")])])]),s("h3",{attrs:{id:"解构赋值-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值-2"}},[t._v("#")]),t._v(" 解构赋值")]),t._v(" "),s("p",[t._v("let [a,b,c]=[12,5,8]")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("左右结构一样")])]),t._v(" "),s("li",[s("p",[t._v("右边是个合法的东西")])]),t._v(" "),s("li",[s("p",[t._v("声明、赋值一次完成")])])]),t._v(" "),s("h2",{attrs:{id:"es7预览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es7预览"}},[t._v("#")]),t._v(" ES7预览")]),t._v(" "),s("h3",{attrs:{id:"数组-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组-2"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("arr.includes()")]),t._v(" 数组是否包含某个东西")]),t._v(" "),s("li",[t._v("数组的 arr.keys(), arr,entries()")]),t._v(" "),s("li",[t._v("for ... in 遍历数组 下标 key")]),t._v(" "),s("li",[t._v("for ... of 遍历数组 值 value, 不能用于json")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let arr = ['a', 'b', 'c']\nconsole.log(arr.includes(1))\n\nfor (let i in arr) {\n    console.log(i) // 循环的时下标 key\n}\n\nfor (let i of arr) {\n    console.log(i) // 循环的是值 value\n}\nfor (let i of arr.keys()) {\n    console.log('>'+i)\n}\nfor (let [key, value] of arr.entries()) {\n    console.log('>' + key + value)\n}\n\nlet json = { a: 12, b: 5, c: 7 }\nfor (let i in json) {\n    console.log(i)\n}\n")])])]),s("h3",{attrs:{id:"字符串-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串-3"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("ul",[s("li",[t._v("padStart()/padEnd() 指定宽度，不够就补空格或指定字符")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log('=' + 'abcd'.padStart(6, '0') + '=')\nconsole.log('=' + 'abcd'.padEnd(6, '0') + '=')\n=00abcd=\n=abcd00=\n")])])]),s("h3",{attrs:{id:"容忍度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容忍度"}},[t._v("#")]),t._v(" 容忍度")]),t._v(" "),s("ul",[s("li",[t._v("[1, 2, 3,] 老版数组最后不能有逗号，新的可以有")]),t._v(" "),s("li",[t._v("函数参数最后多的逗号也可以")])]),t._v(" "),s("h3",{attrs:{id:"async-await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" async await")]),t._v(" "),s("ul",[s("li",[t._v("和 generator yield 类似")]),t._v(" "),s("li",[t._v("generator 不可以写成箭头函数， async 可以")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("async function show() {\n    console.log(1)\n    await\n    console.log(2)\n}\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);