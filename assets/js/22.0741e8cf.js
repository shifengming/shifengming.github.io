(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{244:function(s,t,a){"use strict";a.r(t);var e=a(0),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[s._v("#")]),s._v(" 题目")]),s._v(" "),a("h2",{attrs:{id:"盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[s._v("#")]),s._v(" 盒子模型")]),s._v(" "),a("p",[s._v("盒模型分为标准盒模型和怪异盒模型(IE模型)")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("box-sizing：content-box   //标准盒模型\nbox-sizing：border-box    //怪异盒模型\n")])])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/9/9/16d1528aff0ef536?w=536&h=289&f=gif&s=4492",alt:"cmd-markdown-logo"}}),s._v("\n标准盒模型：元素的宽度等于style里的width+margin+border+padding宽度")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/9/9/16d158cb1351e5b1?w=746&h=455&f=png&s=206974",alt:"cmd-markdown-logo"}})]),s._v(" "),a("p",[s._v("如下代码，整个宽高还是120px")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("div{\n    box-sizing: content-box;\n    margin: 10px;\n    width: 100px;\n    height: 100px;\n    padding: 10px;\n}\n")])])]),a("p",[s._v("怪异盒模型：元素宽度等于style里的width宽度")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/9/9/16d158e2ebd5fefe?w=791&h=462&f=png&s=190936",alt:"cmd-markdown-logo"}}),s._v("\n如下代码，整个宽高还是100px")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("div{\n    box-sizing: border-box;\n    margin: 10px;\n    width: 100px;\n    height: 100px;\n    padding: 10px;\n}\n")])])]),a("p",[s._v("注意：如果你在设计页面中，发现内容区被撑爆了，那么就先检查一下border-sizing是什么，最好在引用reset.css的时候，就对border-sizing进行统一设置，方便管理")]),s._v(" "),a("h2",{attrs:{id:"rem与em的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rem与em的区别"}},[s._v("#")]),s._v(" rem与em的区别")]),s._v(" "),a("blockquote",[a("p",[s._v("rem是根据根的font-size变化，而em是根据父级的font-size变化")])]),s._v(" "),a("p",[s._v("rem：相对于根元素html的font-size，假如html为font-size：12px，那么，在其当中的div设置为font-size：2rem,就是当中的div为24px")]),s._v(" "),a("p",[s._v("em：相对于父元素计算，假如某个p元素为font-size:12px,在它内部有个span标签，设置font-size：2em,那么，这时候的span字体大小为：12*2=24px")]),s._v(" "),a("h2",{attrs:{id:"css选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css选择器"}},[s._v("#")]),s._v(" CSS选择器")]),s._v(" "),a("p",[s._v("css常用选择器")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('通配符：*\nID选择器：#ID\n类选择器：.class\n元素选择器：p、a    等\n后代选择器：p span、div a   等\n伪类选择器：a:hover 等\n属性选择器：input[type="text"]  等\n')])])]),a("p",[s._v("css选择器权重")]),s._v(" "),a("p",[s._v("!important -> 行内样式 -> #id -> .class -> 元素和伪元素 -> * -> 继承 -> 默认")]),s._v(" "),a("h2",{attrs:{id:"css新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css新特性"}},[s._v("#")]),s._v(" CSS新特性")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("transition：过渡\ntransform：旋转、缩放、移动或者倾斜\nanimation：动画\ngradient：渐变\nshadow：阴影\nborder-radius：圆角\n")])])]),a("h2",{attrs:{id:"行内元素和块级元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行内元素和块级元素"}},[s._v("#")]),s._v(" 行内元素和块级元素")]),s._v(" "),a("p",[s._v("行内元素（display: inline）")]),s._v(" "),a("p",[s._v("宽度和高度是由内容决定，与其他元素共占一行的元素，我们将其叫行内元素，例如："),a("code",[s._v("<span> 、 <i> 、 <a>")]),s._v("等")]),s._v(" "),a("p",[s._v("块级元素（display: block)")]),s._v(" "),a("p",[s._v("默认宽度由父容器决定，默认高度由内容决定，独占一行并且可以设置宽高的元素，我们将其叫做块级元素，例如："),a("code",[s._v("<p> 、<div> 、<ul>等")])]),s._v(" "),a("p",[s._v("在平时，我们经常使用CSS的display: inline-block，使它们拥有更多的状态")]),s._v(" "),a("h2",{attrs:{id:"绝对定位和相对定位的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绝对定位和相对定位的区别"}},[s._v("#")]),s._v(" 绝对定位和相对定位的区别")]),s._v(" "),a("p",[s._v("position: absolute")]),s._v(" "),a("p",[s._v("绝对定位：是相对于元素最近的已定位的祖先元素")]),s._v(" "),a("p",[s._v("position: relative")]),s._v(" "),a("p",[s._v("相对定位：相对定位是相对于元素在文档中的初始位置")]),s._v(" "),a("h2",{attrs:{id:"flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[s._v("#")]),s._v(" Flex布局")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5d428c5451882556dc30535c",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://juejin.im/post/5d428c5451882556dc30535c"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[s._v("#")]),s._v(" BFC")]),s._v(" "),a("p",[s._v("什么是BFC?")]),s._v(" "),a("p",[s._v("BFC格式化上下文，它是一个独立的渲染区域，让处于 BFC 内部的元素和外部的元素相互隔离，使内外元素的定位不会相互影响")]),s._v(" "),a("p",[s._v("如何产生BFC?")]),s._v(" "),a("p",[s._v("display: inline-block")]),s._v(" "),a("p",[s._v("position: absolute/fixed")]),s._v(" "),a("p",[s._v("BFC作用")]),s._v(" "),a("p",[s._v("BFC最大的一个作用就是：在页面上有一个独立隔离容器，容器内的元素和容器外的元素布局不会相互影响")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("解决上外边距重叠;重叠的两个box都开启bfc;\n解决浮动引起高度塌陷;容器盒子开启bfc\n解决文字环绕图片;左边图片div,右边文字容器p,将p容器开启bfc\n")])])]),a("h2",{attrs:{id:"水平垂直居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#水平垂直居中"}},[s._v("#")]),s._v(" 水平垂直居中")]),s._v(" "),a("p",[s._v("Flex布局")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("display: flex  //设置Flex模式\nflex-direction: column  //决定元素是横排还是竖着排\nflex-wrap: wrap     //决定元素换行格式\njustify-content: space-between  //同一排下对齐方式，空格如何隔开各个元素\nalign-items: center     //同一排下元素如何对齐\nalign-content: space-between    //多行对齐方式\n")])])]),a("p",[s._v("水平居中")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("行内元素：display: inline-block;\n块级元素：margin: 0 auto;\nFlex: display: flex; justify-content: center\n")])])]),a("p",[s._v("垂直居中")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("行高 = 元素高：line-height: height\nflex: display: flex; align-item: center\n")])])]),a("h2",{attrs:{id:"less-sass-styus三者的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#less-sass-styus三者的区别"}},[s._v("#")]),s._v(" less,sass,styus三者的区别")]),s._v(" "),a("p",[s._v("变量")]),s._v(" "),a("p",[s._v("Sass声明变量必须是『$』开头，后面紧跟变量名和变量值，而且变量名和变量值需要使用冒号：分隔开。")]),s._v(" "),a("p",[s._v("Less 声明变量用『@』开头，其余等同 Sass。")]),s._v(" "),a("p",[s._v("Stylus 中声明变量没有任何限定，结尾的分号可有可无，但变量名和变量值之间必须要有『等号』。")]),s._v(" "),a("p",[s._v("作用域")]),s._v(" "),a("p",[s._v("Sass：三者最差，不存在全局变量的概念")]),s._v(" "),a("p",[s._v("Less：最近的一次更新的变量有效，并且会作用于全部的引用！")]),s._v(" "),a("p",[s._v("Stylus：Sass 的处理方式和 Stylus 相同，变量值输出时根据之前最近的一次定义计算，每次引用最近的定义有效；")]),s._v(" "),a("p",[s._v("嵌套")]),s._v(" "),a("p",[s._v("三种 css 预编译器的「选择器嵌套」在使用上来说没有任何区别，甚至连引用父级选择器的标记 & 也相同")]),s._v(" "),a("p",[s._v("继承")]),s._v(" "),a("p",[s._v("Sass和Stylus的继承非常像，能把一个选择器的所有样式继承到另一个选择器上。使用『@extend』开始，后面接被继承的选择器。Stylus 的继承方式来自 Sass，两者如出一辙。\nLess 则又「独树一帜」地用伪类来描述继承关系；")]),s._v(" "),a("p",[s._v("导入@Import")]),s._v(" "),a("p",[s._v("Sass 中只能在使用 url() 表达式引入时进行变量插值")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$device: mobile;\n@import url(styles.#{$device}.css);\n")])])]),a("p",[s._v("Less 中可以在字符串中进行插值")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@device: mobile;\n@import "styles.@{device}.css";\n')])])]),a("p",[s._v("Stylus 中在这里插值不管用，但是可以利用其字符串拼接的功能实现")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('device = "mobile"\n@import "styles." + device + ".css"\n')])])]),a("p",[s._v("总结")]),s._v(" "),a("p",[s._v("Sass和Less语法严谨、Stylus相对自由。因为Less长得更像 css，所以它可能学习起来更容易。")]),s._v(" "),a("p",[s._v("Sass 和 Compass、Stylus 和 Nib 都是好基友。")]),s._v(" "),a("p",[s._v("Sass 和 Stylus 都具有类语言的逻辑方式处理：条件、循环等，而 Less 需要通过When等关键词模拟这些功能，这方面 Less 比不上 Sass 和 Stylus")]),s._v(" "),a("p",[s._v("Less 在丰富性以及特色上都不及 Sass 和 Stylus，若不是因为 Bootstrap 引入了 Less，可能它不会像现在这样被广泛应用（个人愚见）")]),s._v(" "),a("h2",{attrs:{id:"link与-import区别与选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link与-import区别与选择"}},[s._v("#")]),s._v(" link与@import区别与选择")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<style type="text/css">\n\t@import url(CSS文件路径地址);\n</style>\n<link href="CSSurl路径" rel="stylesheet" type="text/css" /\n')])])]),a("p",[s._v("link功能较多，可以定义 RSS，定义 Rel 等作用，而@import只能用于加载 css；")]),s._v(" "),a("p",[s._v("当解析到link时，页面会同步加载所引的 css，而@import所引用的 css 会等到页面加载完才被加载；")]),s._v(" "),a("p",[s._v("@import需要 IE5 以上才能使用；")]),s._v(" "),a("p",[s._v("link可以使用 js 动态引入，@import不行")]),s._v(" "),a("h2",{attrs:{id:"多行元素的文本省略号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行元素的文本省略号"}},[s._v("#")]),s._v(" 多行元素的文本省略号")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("overflow : hidden;\ntext-overflow: ellipsis;\ndisplay: -webkit-box;\n-webkit-line-clamp: 3;\n-webkit-box-orient: vertical\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);